{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { MOCKDOCUMENTS } from './MOCKDOCUMENTS';\nimport * as i0 from \"@angular/core\";\nexport class DocumentService {\n  constructor() {\n    this.document = [];\n    this.documentSelectedEvent = new EventEmitter();\n    this.documentChangedEvent = new EventEmitter();\n    this.document = MOCKDOCUMENTS;\n  }\n  getDocuments() {\n    return this.document.slice();\n  }\n  deleteDocument(document) {\n    if (!document) {\n      return;\n    }\n    const pos = this.document.indexOf(document);\n    if (pos < 0) {\n      return;\n    }\n    this.document.splice(pos, 1);\n    this.documentChangedEvent.emit(document);\n  }\n  getDocument(id) {\n    for (let document of this.document) {\n      if (document.id === id) {\n        console.log(document);\n        return document;\n      }\n    }\n  }\n}\nDocumentService.ɵfac = function DocumentService_Factory(t) {\n  return new (t || DocumentService)();\n};\nDocumentService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: DocumentService,\n  factory: DocumentService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAAA,SAAqBA,YAAY,QAAQ,eAAe;AAExD,SAASC,aAAa,QAAQ,iBAAiB;;AAK/C,OAAM,MAAOC,eAAe;EAI1BC;IAHA,aAAQ,GAAe,EAAE;IACzB,0BAAqB,GAAG,IAAIH,YAAY,EAAY;IACpD,yBAAoB,GAAG,IAAIA,YAAY,EAAY;IAEjD,IAAI,CAACI,QAAQ,GAAGH,aAAa;EAC/B;EAEAI,YAAY;IACV,OAAO,IAAI,CAACD,QAAQ,CAACE,KAAK,EAAE;EAC9B;EAEAC,cAAc,CAACH,QAAkB;IAC/B,IAAI,CAACA,QAAQ,EAAE;MACZ;;IAEH,MAAMI,GAAG,GAAG,IAAI,CAACJ,QAAQ,CAACK,OAAO,CAACL,QAAQ,CAAC;IAC3C,IAAII,GAAG,GAAG,CAAC,EAAE;MACV;;IAEH,IAAI,CAACJ,QAAQ,CAACM,MAAM,CAACF,GAAG,EAAE,CAAC,CAAC;IAC5B,IAAI,CAACG,oBAAoB,CAACC,IAAI,CAACR,QAAQ,CAAC;EAC3C;EAGES,WAAW,CAACC,EAAU;IACrB,KAAK,IAAIV,QAAQ,IAAI,IAAI,CAACA,QAAQ,EAAE;MAClC,IAAIA,QAAQ,CAACU,EAAE,KAAKA,EAAE,EAAE;QACxBC,OAAO,CAACC,GAAG,CAACZ,QAAQ,CAAC;QAClB,OAAOA,QAAQ;;;EAGrB;;AAhCUF,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;SAAfA,eAAe;EAAAe,SAAff,eAAe;EAAAgB,YAFd;AAAM","names":["EventEmitter","MOCKDOCUMENTS","DocumentService","constructor","document","getDocuments","slice","deleteDocument","pos","indexOf","splice","documentChangedEvent","emit","getDocument","id","console","log","factory","providedIn"],"sourceRoot":"","sources":["C:\\data\\A-byu\\Full Stack Dev WDD 430\\code\\wdd430\\byui-winter\\week7\\cms\\src\\app\\documents\\document.service.ts"],"sourcesContent":["import { Injectable, EventEmitter } from '@angular/core';\nimport { Document } from './documents.model';\nimport { MOCKDOCUMENTS } from './MOCKDOCUMENTS';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DocumentService {\n  document: Document[] = [];\n  documentSelectedEvent = new EventEmitter<Document>();\n  documentChangedEvent = new EventEmitter<Document>();\n  constructor() {\n    this.document = MOCKDOCUMENTS;\n  };\n\n  getDocuments() {\n    return this.document.slice();\n  };\n\n  deleteDocument(document: Document) {\n    if (!document) {\n       return;\n    }\n    const pos = this.document.indexOf(document);\n    if (pos < 0) {\n       return;\n    }\n    this.document.splice(pos, 1);\n    this.documentChangedEvent.emit(document);\n };\n\n\n   getDocument(id: string): Document {\n    for (let document of this.document) {\n      if (document.id === id) {\n      console.log(document);\n         return document;\n       }\n     }\n   }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}