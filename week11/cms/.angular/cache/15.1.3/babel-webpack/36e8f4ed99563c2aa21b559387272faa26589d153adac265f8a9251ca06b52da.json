{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, ViewChild } from '@angular/core';\nimport { Message } from '../../message.model';\nlet MessageEditComponent = class MessageEditComponent {\n  // @Output() messageAdded = new EventEmitter<Message>();\n  constructor(messageService, contactService) {\n    this.messageService = messageService;\n    this.currentSender = '101';\n  }\n  ngOnInit() {\n    this.contactService.getContact(\"101\").subscribe(response => {\n      this.currentSender = response.contact;\n    });\n  }\n  addMessage() {\n    const subject = this.subjectInputRef.nativeElement.value;\n    const msgText = this.msgTextInputRef.nativeElement.value;\n    const newMessage = new Message(\"99\", subject, msgText, this.currentSender);\n    // this.messageAdded.emit(newMessage);\n    this.messageService.addMessage(newMessage);\n  }\n  onClear() {\n    console.log('Clear Message ran');\n    this.subjectInputRef.nativeElement.value = '';\n    this.msgTextInputRef.nativeElement.value = '';\n  }\n};\n__decorate([ViewChild('subjectInput', {\n  static: false\n})], MessageEditComponent.prototype, \"subjectInputRef\", void 0);\n__decorate([ViewChild('msgTextInput', {\n  static: false\n})], MessageEditComponent.prototype, \"msgTextInputRef\", void 0);\nMessageEditComponent = __decorate([Component({\n  selector: 'app-message-edit',\n  templateUrl: './message-edit.component.html',\n  styleUrls: ['./message-edit.component.css']\n})], MessageEditComponent);\nexport { MessageEditComponent };","map":{"version":3,"mappings":";AAAA,SACEA,SAAS,EAGTC,SAAS,QAGJ,eAAe;AACtB,SAASC,OAAO,QAAQ,qBAAqB;AAQtC,IAAMC,oBAAoB,GAA1B,MAAMA,oBAAoB;EAK/B;EAEAC,YAAoBC,cAA8B,EAAEC,cAA8B;IAA9D,mBAAc,GAAdD,cAAc;IALlC,kBAAa,GAAG,KAAK;EAKgE;EAErFE,QAAQ;IACV,IAAI,CAACD,cAAc,CAACE,UAAU,CAAC,KAAK,CAAC,CACpCC,SAAS,CACRC,QAAQ,IAAG;MACT,IAAI,CAACC,aAAa,GAAGD,QAAQ,CAACE,OAAO;IACvC,CAAC,CACF;EACC;EAEAC,UAAU;IACR,MAAMC,OAAO,GAAG,IAAI,CAACC,eAAe,CAACC,aAAa,CAACC,KAAK;IACxD,MAAMC,OAAO,GAAG,IAAI,CAACC,eAAe,CAACH,aAAa,CAACC,KAAK;IACxD,MAAMG,UAAU,GAAG,IAAIlB,OAAO,CAAC,IAAI,EAAEY,OAAO,EAAEI,OAAO,EAAE,IAAI,CAACP,aAAa,CAAC;IAC1E;IACA,IAAI,CAACN,cAAc,CAACQ,UAAU,CAACO,UAAU,CAAC;EAC5C;EACAC,OAAO;IACLC,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;IAChC,IAAI,CAACR,eAAe,CAACC,aAAa,CAACC,KAAK,GAAG,EAAE;IAC7C,IAAI,CAACE,eAAe,CAACH,aAAa,CAACC,KAAK,GAAG,EAAE;EAC/C;CACD;AA3B+CO,YAA7CvB,SAAS,CAAC,cAAc,EAAE;EAAEwB,MAAM,EAAE;AAAK,CAAE,CAAC,6DAA6B;AAC5BD,YAA7CvB,SAAS,CAAC,cAAc,EAAE;EAAEwB,MAAM,EAAE;AAAK,CAAE,CAAC,6DAA6B;AAJ/DtB,oBAAoB,eALhCH,SAAS,CAAC;EACT0B,QAAQ,EAAE,kBAAkB;EAC5BC,WAAW,EAAE,+BAA+B;EAC5CC,SAAS,EAAE,CAAC,8BAA8B;CAC3C,CAAC,GACWzB,oBAAoB,CA8BhC;SA9BYA,oBAAoB","names":["Component","ViewChild","Message","MessageEditComponent","constructor","messageService","contactService","ngOnInit","getContact","subscribe","response","currentSender","contact","addMessage","subject","subjectInputRef","nativeElement","value","msgText","msgTextInputRef","newMessage","onClear","console","log","__decorate","static","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\data\\A-byu\\Full Stack Dev WDD 430\\code\\wdd430\\byui-winter\\week11\\cms\\src\\app\\messages\\message-list\\message-edit\\message-edit.component.ts"],"sourcesContent":["import {\n  Component,\n  OnInit,\n  ElementRef,\n  ViewChild,\n  EventEmitter,\n  Output,\n} from '@angular/core';\nimport { Message } from '../../message.model';\nimport { MessageService } from '../../message.service';\n\n@Component({\n  selector: 'app-message-edit',\n  templateUrl: './message-edit.component.html',\n  styleUrls: ['./message-edit.component.css'],\n})\nexport class MessageEditComponent implements OnInit {\n  messages: Message[];\n  currentSender = '101';\n  @ViewChild('subjectInput', { static: false }) subjectInputRef: ElementRef;\n  @ViewChild('msgTextInput', { static: false }) msgTextInputRef: ElementRef;\n  // @Output() messageAdded = new EventEmitter<Message>();\n\n  constructor(private messageService: MessageService, contactService: ContactService) {}\n\n  ngOnInit() {\nthis.contactService.getContact(\"101\")\n.subscribe(\n  response => {\n    this.currentSender = response.contact;\n  }\n)\n  }\n\n  addMessage() {\n    const subject = this.subjectInputRef.nativeElement.value;\n    const msgText = this.msgTextInputRef.nativeElement.value;\n    const newMessage = new Message(\"99\", subject, msgText, this.currentSender);\n    // this.messageAdded.emit(newMessage);\n    this.messageService.addMessage(newMessage);\n  }\n  onClear() {\n    console.log('Clear Message ran');\n    this.subjectInputRef.nativeElement.value = '';\n    this.msgTextInputRef.nativeElement.value = '';\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}