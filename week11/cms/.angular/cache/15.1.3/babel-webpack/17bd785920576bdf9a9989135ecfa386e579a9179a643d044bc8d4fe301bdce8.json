{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../contact.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction ContactEditComponent_div_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Invalid Email Entry\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ContactEditComponent_div_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 25);\n    i0.ɵɵtext(1, \"Invalid Phone Number Entry\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ContactEditComponent_div_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 26);\n    i0.ɵɵtext(1, \" The Document Name and Document Email are required fields \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ContactEditComponent_div_36_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 26);\n    i0.ɵɵtext(1, \" The Document Name and Document Email are required fields \");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class ContactEditComponent {\n  constructor(contactService, router, route) {\n    this.contactService = contactService;\n    this.router = router;\n    this.route = route;\n    this.editMode = false;\n    // name: string = '';\n    // tsdocId = { id: 'enter id here' };\n    // tsdocName = { name: 'enter name here' };\n    // tsdocDesc = { description: 'enter description here' };\n    // tsdocUrl = { url: 'enter url here' };\n    // tdocId = { id: 'enter id here' };\n    this.tdocName = \"enter name here\";\n    this.tdocEmail = \"enter email here\";\n    this.tdocPhone = \"enter phone here\";\n    this.tdocImageurl = \"enter URL here\";\n    this.name = \"enter name here\";\n    this.email = \"enter email here\";\n    this.phone = \"enter phone here\";\n    this.imageUrl = \"enter URL here\";\n    this.tsWhat = true;\n    this.fid = \"80\";\n  }\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n      // console.log(params['id']);\n      if (!params['id']) {\n        this.editMode = false;\n        return;\n      }\n      // grab contact using current doc ID\n      this.id = params['id'];\n      this.originalContact = this.contactService.getContact(this.id);\n      this.name = this.originalContact.name;\n      this.email = this.originalContact.email;\n      this.phone = this.originalContact.phone;\n      this.imageUrl = this.originalContact.imageUrl;\n      if (!this.originalContact) {\n        return;\n      }\n      // this.contact = this.originalContact;\n      // Parse this.contact\n      this.contact = JSON.parse(JSON.stringify(this.originalContact));\n      this.editMode = true;\n      // console.log('Cloned Doc = ', this.contact);\n    });\n  }\n\n  onSubmit(f) {\n    // f.value.id = \"80\"; // Set blank formId\n    console.log('All Form Fields :', f);\n    console.log('Form Input = ', f.value);\n    // this.contact = (this.id, f.value.name, f.value.url)\n    this.newContact = f.value;\n    console.log(\"New Contact from form\", this.newContact);\n    if (this.editMode == true) {\n      this.contactService.updateContact(this.originalContact, this.newContact);\n    } else {\n      this.contactService.addContact(this.newContact);\n    }\n    this.router.navigate(['/contacts']);\n    // console.log(f)\n    // console.log(this.tsdocTitle)\n    //console.log(\"Title Value is:\", f.value.docTitle)\n    //console.log(\"Description Value is:\", f.value.docDesc)\n    // console.log(\"Url Value is:\", f.value.docUrl)\n    // console.log(\"Url Value is:\", f.value.docUrl)\n  }\n\n  onCancel() {\n    this.router.navigate(['/contacts']);\n  }\n}\nContactEditComponent.ɵfac = function ContactEditComponent_Factory(t) {\n  return new (t || ContactEditComponent)(i0.ɵɵdirectiveInject(i1.ContactService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n};\nContactEditComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ContactEditComponent,\n  selectors: [[\"app-contact-edit\"]],\n  decls: 43,\n  vars: 9,\n  consts: [[1, \"panel\", \"panel-default\"], [1, \"panel-body\"], [\"id\", \"contact-edit\"], [\"f\", \"ngForm\"], [1, \"row\"], [1, \"col-sm-12\", \"form-group\"], [\"type\", \"hidden\", \"name\", \"id\", \"ngModel\", \"\", \"id\", \"id\", \"size\", \"120\", \"max\", \"120\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"name\"], [\"type\", \"text\", \"name\", \"name\", \"ngModel\", \"\", \"id\", \"name\", \"size\", \"120\", \"max\", \"120\", 1, \"form-control\", \"required\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"email\"], [\"type\", \"text\", \"name\", \"email\", \"ngModel\", \"\", \"id\", \"email\", \"size\", \"120\", \"max\", \"255\", \"pattern\", \"[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,3}$\", 1, \"form-control\", \"required\", 3, \"ngModel\", \"ngModelChange\"], [\"valemail\", \"ngModel\"], [4, \"ngIf\"], [\"for\", \"phone\"], [\"type\", \"text\", \"name\", \"phone\", \"ngModel\", \"\", \"id\", \"phone\", \"size\", \"150\", \"max\", \"255\", \"pattern\", \"\\\\D*([2-9]\\\\d{2})(\\\\D*)([2-9]\\\\d{2})(\\\\D*)(\\\\d{4})\\\\D*\", 1, \"form-control\", \"invalid\", 3, \"ngModel\", \"ngModelChange\"], [\"valphone\", \"ngModel\"], [\"ngClass\", \"text: strong\", 4, \"ngIf\"], [\"class\", \"alert alert-danger\", 4, \"ngIf\"], [\"for\", \"imageUrl\"], [\"type\", \"text\", \"name\", \"imageUrl\", \"ngModel\", \"\", \"id\", \"imageUrl\", \"size\", \"150\", \"max\", \"255\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [1, \"form-group\"], [\"for\", \"groupList\"], [1, \"col-xs-12\", \"btn-toolbar\"], [\"type\", \"submit\", 1, \"btn\", \"btn-success\", 3, \"click\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", 3, \"click\"], [\"ngClass\", \"text: strong\"], [1, \"alert\", \"alert-danger\"]],\n  template: function ContactEditComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r7 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"form\", 2, 3)(4, \"div\", 4)(5, \"div\", 5)(6, \"input\", 6);\n      i0.ɵɵlistener(\"ngModelChange\", function ContactEditComponent_Template_input_ngModelChange_6_listener($event) {\n        return ctx.id = $event;\n      });\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(7, \"div\", 4)(8, \"div\", 5)(9, \"label\", 7);\n      i0.ɵɵtext(10, \"Name:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"input\", 8);\n      i0.ɵɵlistener(\"ngModelChange\", function ContactEditComponent_Template_input_ngModelChange_11_listener($event) {\n        return ctx.name = $event;\n      });\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(12, \"div\", 4)(13, \"div\", 5)(14, \"label\", 9);\n      i0.ɵɵtext(15, \"Email:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"input\", 10, 11);\n      i0.ɵɵlistener(\"ngModelChange\", function ContactEditComponent_Template_input_ngModelChange_16_listener($event) {\n        return ctx.email = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(18, ContactEditComponent_div_18_Template, 2, 0, \"div\", 12);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(19, \"div\", 4)(20, \"div\", 5)(21, \"label\", 13);\n      i0.ɵɵtext(22, \"Phone:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(23, \"input\", 14, 15);\n      i0.ɵɵlistener(\"ngModelChange\", function ContactEditComponent_Template_input_ngModelChange_23_listener($event) {\n        return ctx.phone = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(25, ContactEditComponent_div_25_Template, 2, 0, \"div\", 16);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(26, ContactEditComponent_div_26_Template, 2, 0, \"div\", 17);\n      i0.ɵɵelementStart(27, \"div\", 4)(28, \"div\", 5)(29, \"label\", 18);\n      i0.ɵɵtext(30, \"Image URL:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(31, \"input\", 19);\n      i0.ɵɵlistener(\"ngModelChange\", function ContactEditComponent_Template_input_ngModelChange_31_listener($event) {\n        return ctx.imageUrl = $event;\n      });\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(32, \"div\", 4)(33, \"div\", 20)(34, \"label\", 21);\n      i0.ɵɵtext(35, \"Group Contacts:\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵtemplate(36, ContactEditComponent_div_36_Template, 2, 0, \"div\", 17);\n      i0.ɵɵelementStart(37, \"div\", 4)(38, \"div\", 22)(39, \"button\", 23);\n      i0.ɵɵlistener(\"click\", function ContactEditComponent_Template_button_click_39_listener() {\n        i0.ɵɵrestoreView(_r7);\n        const _r0 = i0.ɵɵreference(3);\n        return i0.ɵɵresetView(ctx.onSubmit(_r0));\n      });\n      i0.ɵɵtext(40, \"Save\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(41, \"button\", 24);\n      i0.ɵɵlistener(\"click\", function ContactEditComponent_Template_button_click_41_listener() {\n        return ctx.onCancel();\n      });\n      i0.ɵɵtext(42, \" Cancel \");\n      i0.ɵɵelementEnd()()()()()();\n    }\n    if (rf & 2) {\n      const _r0 = i0.ɵɵreference(3);\n      const _r1 = i0.ɵɵreference(17);\n      const _r3 = i0.ɵɵreference(24);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngModel\", ctx.id);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.name);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.email);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", _r1.invalid && _r1.touched);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.phone);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", _r3.invalid && _r3.touched);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", _r0.form.controls.status);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.imageUrl);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", !ctx.email || !ctx.name);\n    }\n  },\n  dependencies: [i3.NgClass, i3.NgIf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.PatternValidator, i4.NgModel, i4.NgForm],\n  styles: [\".required.ng-invalid[_ngcontent-%COMP%] {\\n  border: 1px solid red;\\n}\\n\\n.invalid.ng-invalid.ng-dirty[_ngcontent-%COMP%] {\\n  border: 1px solid red;\\n}\\n\\n.pad-left-right[_ngcontent-%COMP%]{\\n  padding-left:.1rem;\\n}\\n\\n.deleteButton[_ngcontent-%COMP%] {\\n  margin-top: 1.5rem;\\n  margin-left: -1.2rem;\\n  width: 3.4rem;\\n}\\n\\n.buttonDiv[_ngcontent-%COMP%] {\\n  margin-top: 1.5rem;\\n}\\n\\n.groupDiv[_ngcontent-%COMP%] {\\n  min-height: 6rem;\\n  border: solid thin lightgrey;\\n}\\n\\n.dragMsg[_ngcontent-%COMP%] {\\n  font-size: 2rem;\\n  color: darkgrey;\\n  margin-left: 3rem;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29udGFjdHMvY29udGFjdC1lZGl0L2NvbnRhY3QtZWRpdC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFDQTtFQUNFLHFCQUFxQjtBQUN2Qjs7QUFFQTtFQUNFLHFCQUFxQjtBQUN2Qjs7QUFFQTtFQUNFLGtCQUFrQjtBQUNwQjs7QUFFQTtFQUNFLGtCQUFrQjtFQUNsQixvQkFBb0I7RUFDcEIsYUFBYTtBQUNmOztBQUVBO0VBQ0Usa0JBQWtCO0FBQ3BCOztBQUVBO0VBQ0UsZ0JBQWdCO0VBQ2hCLDRCQUE0QjtBQUM5Qjs7QUFFQTtFQUNFLGVBQWU7RUFDZixlQUFlO0VBQ2YsaUJBQWlCO0FBQ25CIiwic291cmNlc0NvbnRlbnQiOlsiXG4ucmVxdWlyZWQubmctaW52YWxpZCB7XG4gIGJvcmRlcjogMXB4IHNvbGlkIHJlZDtcbn1cblxuLmludmFsaWQubmctaW52YWxpZC5uZy1kaXJ0eSB7XG4gIGJvcmRlcjogMXB4IHNvbGlkIHJlZDtcbn1cblxuLnBhZC1sZWZ0LXJpZ2h0e1xuICBwYWRkaW5nLWxlZnQ6LjFyZW07XG59XG5cbi5kZWxldGVCdXR0b24ge1xuICBtYXJnaW4tdG9wOiAxLjVyZW07XG4gIG1hcmdpbi1sZWZ0OiAtMS4ycmVtO1xuICB3aWR0aDogMy40cmVtO1xufVxuXG4uYnV0dG9uRGl2IHtcbiAgbWFyZ2luLXRvcDogMS41cmVtO1xufVxuXG4uZ3JvdXBEaXYge1xuICBtaW4taGVpZ2h0OiA2cmVtO1xuICBib3JkZXI6IHNvbGlkIHRoaW4gbGlnaHRncmV5O1xufVxuXG4uZHJhZ01zZyB7XG4gIGZvbnQtc2l6ZTogMnJlbTtcbiAgY29sb3I6IGRhcmtncmV5O1xuICBtYXJnaW4tbGVmdDogM3JlbTtcbn1cbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":"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","names":["i0","ContactEditComponent","constructor","contactService","router","route","ngOnInit","params","subscribe","editMode","id","originalContact","getContact","name","email","phone","imageUrl","contact","JSON","parse","stringify","onSubmit","f","console","log","value","newContact","updateContact","addContact","navigate","onCancel","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\data\\A-byu\\Full Stack Dev WDD 430\\code\\wdd430\\byui-winter\\week8\\cms\\src\\app\\contacts\\contact-edit\\contact-edit.component.html","C:\\data\\A-byu\\Full Stack Dev WDD 430\\code\\wdd430\\byui-winter\\week8\\cms\\src\\app\\contacts\\contact-edit\\contact-edit.component.ts"],"sourcesContent":["<div class=\"panel panel-default\">\n  <div class=\"panel-body\">\n    <form id=\"contact-edit\"  #f=\"ngForm\">\n        <div class=\"row\">\n        <div class=\"col-sm-12 form-group\">\n          <input\n            type=\"hidden\"\n            name=\"id\"\n            ngModel\n            [(ngModel)]=\"id\"\n            id=\"id\"\n            class=\"form-control\"\n            size=\"120\"\n            max=\"120\"\n            required\n          />\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-sm-12 form-group\">\n          <label for=\"name\">Name:</label>\n          <input\n            type=\"text\"\n            name=\"name\"\n            ngModel\n            [(ngModel)]=\"name\"\n            id=\"name\"\n            class=\"form-control required\"\n            size=\"120\"\n            max=\"120\"\n          />\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-sm-12 form-group\">\n          <label for=\"email\">Email:</label>\n          <input\n            type=\"text\"\n            name=\"email\"\n            #valemail=\"ngModel\"\n            ngModel\n            [(ngModel)]=\"email\"\n            id=\"email\"\n            class=\"form-control required\"\n            size=\"120\"\n            max=\"255\"\n            pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,3}$\"\n          />\n\n          <div *ngIf=\"valemail.invalid && valemail.touched\">Invalid Email Entry</div>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-sm-12 form-group\">\n          <label for=\"phone\">Phone:</label>\n          <input\n            type=\"text\"\n            name=\"phone\"\n            #valphone=\"ngModel\"\n            ngModel\n            [(ngModel)]=\"phone\"\n            id=\"phone\"\n            class=\"form-control invalid\"\n            size=\"150\"\n            max=\"255\"\n            pattern=\"\\D*([2-9]\\d{2})(\\D*)([2-9]\\d{2})(\\D*)(\\d{4})\\D*\"\n          />\n          <div ngClass=\"text: strong\" *ngIf=\"valphone.invalid && valphone.touched\">Invalid Phone Number Entry</div>\n        </div>\n      </div>\n       <div\n      class=\"alert alert-danger\"\n      *ngIf=\"f.form.controls.status\" >\n      The Document Name and Document Email are required fields\n    </div>\n\n      <div class=\"row\">\n        <div class=\"col-sm-12 form-group\">\n          <label for=\"imageUrl\">Image URL:</label>\n          <input\n            type=\"text\"\n            name=\"imageUrl\"\n            ngModel\n            [(ngModel)]=\"imageUrl\"\n            id=\"imageUrl\"\n            class=\"form-control\"\n            size=\"150\"\n            max=\"255\"\n          />\n        </div>\n      </div>\n\n      <div class=\"row\">\n        <div class=\"form-group\">\n          <label for=\"groupList\">Group Contacts:</label>\n          <!-- <div class=\"row\" id=\"grouplist\" style=\"min-height: 3rem\">\n            <div *ngfor=\"let contact of groupcontacts; let i = index\">\n              <div>\n                <cms-contact-item\n                  class=\"col-sm-11\"\n                  [contact]=\"contact\"\n                ></cms-contact-item>\n                <button\n                  class=\"btn btn-danger col-sm-2 deleteButton\"\n                  (click)=\"onRemoveItem(i)\"\n                >\n                  X\n                </button>\n              </div>\n            </div>\n            <span class=\"dragMsg\" *ngIf=\"groupContacts?.length < 1\"\n              >Drag contacts in group here</span\n            >\n          </div> -->\n        </div>\n      </div>\n      <div\n      class=\"alert alert-danger\"\n      *ngIf=\"!email || !name\" >\n      The Document Name and Document Email are required fields\n    </div>\n      <div class=\"row\">\n        <div class=\"col-xs-12 btn-toolbar\">\n          <button class=\"btn btn-success\" type=\"submit\" (click)=\"onSubmit(f)\">Save</button>\n          <button class=\"btn btn-primary\" type=\"button\" (click)=\"onCancel()\">\n            Cancel\n          </button>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {\n  FormGroup,\n  FormControl,\n  FormArray,\n  Validators,\n  NgForm,\n} from '@angular/forms';\nimport { ContactService } from '../contact.service';\nimport { Contact } from '../contact.model';\nimport { ActivatedRoute, Router, Params } from '@angular/router';\n@Component({\n  selector: 'app-contact-edit',\n  templateUrl: './contact-edit.component.html',\n  styleUrls: ['./contact-edit.component.css'],\n})\nexport class ContactEditComponent implements OnInit {\n  originalContact: Contact;\n  contact: Contact;\n  newContact: Contact;\n  value: Contact;\n  editMode: boolean = false;\n  // name: string = '';\n  // tsdocId = { id: 'enter id here' };\n  // tsdocName = { name: 'enter name here' };\n  // tsdocDesc = { description: 'enter description here' };\n  // tsdocUrl = { url: 'enter url here' };\n  // tdocId = { id: 'enter id here' };\n  tdocName = \"enter name here\"\n  tdocEmail = \"enter email here\"\n  tdocPhone = \"enter phone here\"\n  tdocImageurl = \"enter URL here\"\n\n  name = \"enter name here\"\n  email = \"enter email here\"\n  phone = \"enter phone here\"\n  imageUrl = \"enter URL here\"\n\n  tsWhat = true;\n  fid: string = \"80\";\n  id: string;\n  noid: string;\n  strid: string;\n\n  constructor(\n    private contactService: ContactService,\n    private router: Router,\n    private route: ActivatedRoute\n  ) {}\n\n  ngOnInit() {\n    this.route.params.subscribe((params: Params) => {\n      // console.log(params['id']);\n      if (!params['id']) {\n        this.editMode = false;\n        return;\n      }\n      // grab contact using current doc ID\n      this.id = params['id'];\n      this.originalContact = this.contactService.getContact(this.id);\n  this.name = this.originalContact.name;\n  this.email = this.originalContact.email;\n  this.phone = this.originalContact.phone;\n  this.imageUrl = this.originalContact.imageUrl;\n\n      if (!this.originalContact) {\n        return;\n      }\n      // this.contact = this.originalContact;\n      // Parse this.contact\n      this.contact = JSON.parse(JSON.stringify(this.originalContact));\n      this.editMode = true;\n      // console.log('Cloned Doc = ', this.contact);\n    });\n  }\n\n  onSubmit(f: NgForm) {\n    // f.value.id = \"80\"; // Set blank formId\n    console.log('All Form Fields :', f);\n    console.log('Form Input = ', f.value);\n    // this.contact = (this.id, f.value.name, f.value.url)\n    this.newContact = (f.value)\n    console.log(\"New Contact from form\", this.newContact);\n    if ((this.editMode == true)) {\n      this.contactService.updateContact(\n        this.originalContact,\n        this.newContact\n      );\n    } else {\n      this.contactService.addContact(this.newContact);\n    }\n\n    this.router.navigate(['/contacts']);\n    // console.log(f)\n    // console.log(this.tsdocTitle)\n    //console.log(\"Title Value is:\", f.value.docTitle)\n    //console.log(\"Description Value is:\", f.value.docDesc)\n    // console.log(\"Url Value is:\", f.value.docUrl)\n    // console.log(\"Url Value is:\", f.value.docUrl)\n  }\n\n  onCancel() {\n    this.router.navigate(['/contacts']);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}