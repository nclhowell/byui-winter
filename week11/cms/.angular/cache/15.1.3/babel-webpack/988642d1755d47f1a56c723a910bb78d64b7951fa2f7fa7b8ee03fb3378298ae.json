{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class ContactsFilterPipe {\n  transform(contacts, term) {\n    let filteredContacts = [];\n    if (term && term.length > 0) {\n      filteredContacts = contacts.filter(contact => contact.name.toLowerCase().includes(term.toLowerCase()));\n    }\n    if (filteredContacts.length < 1) {\n      return contacts;\n    }\n    return filteredContacts;\n  }\n}\nContactsFilterPipe.ɵfac = function ContactsFilterPipe_Factory(t) {\n  return new (t || ContactsFilterPipe)();\n};\nContactsFilterPipe.ɵpipe = /*@__PURE__*/i0.ɵɵdefinePipe({\n  name: \"contactsFilter\",\n  type: ContactsFilterPipe,\n  pure: true\n});","map":{"version":3,"mappings":";AAMA,OAAM,MAAOA,kBAAkB;EAG7BC,SAAS,CAACC,QAAmB,EAAEC,IAAS;IACtC,IAAIC,gBAAgB,GAAa,EAAE;IACnC,IAAID,IAAI,IAAIA,IAAI,CAACE,MAAM,GAAG,CAAC,EAAE;MAC1BD,gBAAgB,GAAGF,QAAQ,CAACI,MAAM,CAC9BC,OAAe,IAAKA,OAAO,CAACC,IAAI,CAACC,WAAW,EAAE,CAACC,QAAQ,CAACP,IAAI,CAACM,WAAW,EAAE,CAAC,CAC9E;;IAEJ,IAAIL,gBAAgB,CAACC,MAAM,GAAG,CAAC,EAAC;MAC7B,OAAOH,QAAQ;;IAElB,OAAOE,gBAAgB;EAC1B;;AAdYJ,kBAAkB;mBAAlBA,kBAAkB;AAAA;AAAlBA,kBAAkB;;QAAlBA,kBAAkB;EAAAW;AAAA","names":["ContactsFilterPipe","transform","contacts","term","filteredContacts","length","filter","contact","name","toLowerCase","includes","pure"],"sourceRoot":"","sources":["C:\\data\\A-byu\\Full Stack Dev WDD 430\\code\\wdd430\\byui-winter\\week9\\cms\\src\\app\\contacts\\contacts-filter.pipe.ts"],"sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\nimport { Contact } from './contact.model';\n\n@Pipe({\n  name: 'contactsFilter'\n})\nexport class ContactsFilterPipe implements PipeTransform {\n\n\n  transform(contacts: Contact[], term: any) {\n    let filteredContacts: Contact[] =[];\n    if (term && term.length > 0) {\n       filteredContacts = contacts.filter(\n          (contact:Contact) => contact.name.toLowerCase().includes(term.toLowerCase())\n       );\n    }\n    if (filteredContacts.length < 1){\n       return contacts;\n    }\n    return filteredContacts;\n }\n\n\n  // transform(contacts: Contact[], term: any) {\n  //   let filteredArray: Contact[] =[];\n  //   for (let i=0; i<contacts.length; i++) {\n  //      let contact = contacts[i];\n  //      if (contact.name.toLowerCase().includes(term)) {\n  //         filteredArray.push(contact);\n  //      }\n  //   }\n  //   if (filteredArray.length < 1){\n  //      return contacts;\n  //   }\n  //   return filteredArray;\n  //  }\n\n  //  transform(value: unknown, ...args: unknown[]): unknown {\n  //   return null;\n  // }\n\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}