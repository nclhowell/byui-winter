{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet ContactEditComponent = class ContactEditComponent {\n  constructor(contactService, router, route) {\n    this.contactService = contactService;\n    this.router = router;\n    this.route = route;\n    this.groupContacts = [];\n    this.editMode = false;\n    this.groupMode = false;\n    // name: string = '';\n    // tsdocId = { id: 'enter id here' };\n    // tsdocName = { name: 'enter name here' };\n    // tsdocDesc = { description: 'enter description here' };\n    // tsdocUrl = { url: 'enter url here' };\n    // tdocId = { id: 'enter id here' };\n    this.tdocName = 'enter name here';\n    this.tdocEmail = 'enter email here';\n    this.tdocPhone = 'enter phone here';\n    this.tdocImageurl = 'enter URL here';\n    this.name = 'enter name here';\n    this.email = 'enter email here';\n    this.phone = 'enter phone here';\n    this.imageUrl = 'enter URL here';\n    this.tsWhat = true;\n    this.fid = '80';\n  }\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n      // console.log(params['id']);\n      if (!params['id']) {\n        this.editMode = false;\n        return;\n      }\n      // grab contact using current doc ID\n      this.id = params['id'];\n      this.originalContact = this.contactService.getContact(this.id);\n      this.name = this.originalContact.name;\n      this.email = this.originalContact.email;\n      this.phone = this.originalContact.phone;\n      this.imageUrl = this.originalContact.imageUrl;\n      if (!this.originalContact) {\n        return;\n      }\n      // this.contact = this.originalContact;\n      // Parse this.contact\n      this.contact = JSON.parse(JSON.stringify(this.originalContact));\n      if (this.contact.group) {\n        this.groupMode = true;\n        this.groupContacts = this.originalContact.group.slice();\n        console.log(this.groupContacts[1]);\n      }\n      this.editMode = true;\n      // console.log('Cloned Doc = ', this.contact);\n    });\n  }\n\n  onSubmit(f) {\n    // f.value.id = \"80\"; // Set blank formId\n    // console.log('All Form Fields :', f);\n    // console.log('Form Input = ', f.value);\n    // this.contact = (this.id, f.value.name, f.value.url)\n    this.newContact = f.value;\n    // console.log('New Contact from form', this.newContact);\n    if (this.editMode == true) {\n      this.contactService.updateContact(this.originalContact, this.newContact);\n    } else {\n      this.contactService.addContact(this.newContact);\n    }\n    this.router.navigate(['/contacts']);\n    // console.log(f)\n    // console.log(this.tsdocTitle)\n    //console.log(\"Title Value is:\", f.value.docTitle)\n    //console.log(\"Description Value is:\", f.value.docDesc)\n    // console.log(\"Url Value is:\", f.value.docUrl)\n    // console.log(\"Url Value is:\", f.value.docUrl)\n  }\n\n  onCancel() {\n    this.router.navigate(['/contacts']);\n  }\n};\nContactEditComponent = __decorate([Component({\n  selector: 'app-contact-edit',\n  templateUrl: './contact-edit.component.html',\n  styleUrls: ['./contact-edit.component.css']\n})], ContactEditComponent);\nexport { ContactEditComponent };","map":{"version":3,"mappings":"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","names":["Component","ContactEditComponent","constructor","contactService","router","route","ngOnInit","params","subscribe","editMode","id","originalContact","getContact","name","email","phone","imageUrl","contact","JSON","parse","stringify","group","groupMode","groupContacts","slice","console","log","onSubmit","f","newContact","value","updateContact","addContact","navigate","onCancel","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\data\\A-byu\\Full Stack Dev WDD 430\\code\\wdd430\\byui-winter\\week11\\cms\\src\\app\\contacts\\contact-edit\\contact-edit.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport {\n  FormGroup,\n  FormControl,\n  FormArray,\n  Validators,\n  NgForm,\n} from '@angular/forms';\nimport { ContactService } from '../contact.service';\nimport { Contact } from '../contact.model';\nimport { ActivatedRoute, Router, Params } from '@angular/router';\n@Component({\n  selector: 'app-contact-edit',\n  templateUrl: './contact-edit.component.html',\n  styleUrls: ['./contact-edit.component.css'],\n})\nexport class ContactEditComponent implements OnInit {\n  originalContact: Contact;\n  groupContacts: Contact[] = [];\n  contact: Contact;\n  newContact: Contact;\n  value: Contact;\n  editMode: boolean = false;\n  groupMode: boolean = false;\n  // name: string = '';\n  // tsdocId = { id: 'enter id here' };\n  // tsdocName = { name: 'enter name here' };\n  // tsdocDesc = { description: 'enter description here' };\n  // tsdocUrl = { url: 'enter url here' };\n  // tdocId = { id: 'enter id here' };\n  tdocName = 'enter name here';\n  tdocEmail = 'enter email here';\n  tdocPhone = 'enter phone here';\n  tdocImageurl = 'enter URL here';\n\n  name = 'enter name here';\n  email = 'enter email here';\n  phone = 'enter phone here';\n  imageUrl = 'enter URL here';\n\n  tsWhat = true;\n  fid: string = '80';\n  id: string;\n  noid: string;\n  strid: string;\n\n  constructor(\n    private contactService: ContactService,\n    private router: Router,\n    private route: ActivatedRoute\n  ) {}\n\n  ngOnInit() {\n    this.route.params.subscribe((params: Params) => {\n      // console.log(params['id']);\n      if (!params['id']) {\n        this.editMode = false;\n        return;\n      }\n      // grab contact using current doc ID\n      this.id = params['id'];\n      this.originalContact = this.contactService.getContact(this.id);\n      this.name = this.originalContact.name;\n      this.email = this.originalContact.email;\n      this.phone = this.originalContact.phone;\n      this.imageUrl = this.originalContact.imageUrl;\n\n      if (!this.originalContact) {\n        return;\n      }\n      // this.contact = this.originalContact;\n      // Parse this.contact\n      this.contact = JSON.parse(JSON.stringify(this.originalContact));\n      if (this.contact.group)\n      {\n        this.groupMode = true;\n        this.groupContacts = this.originalContact.group.slice()\n        console.log(this.groupContacts[1])\n      }\n      this.editMode = true;\n      // console.log('Cloned Doc = ', this.contact);\n    });\n  }\n\n  onSubmit(f: NgForm) {\n    // f.value.id = \"80\"; // Set blank formId\n    // console.log('All Form Fields :', f);\n    // console.log('Form Input = ', f.value);\n    // this.contact = (this.id, f.value.name, f.value.url)\n    this.newContact = f.value;\n    // console.log('New Contact from form', this.newContact);\n    if (this.editMode == true) {\n      this.contactService.updateContact(this.originalContact, this.newContact);\n    } else {\n      this.contactService.addContact(this.newContact);\n    }\n\n    this.router.navigate(['/contacts']);\n    // console.log(f)\n    // console.log(this.tsdocTitle)\n    //console.log(\"Title Value is:\", f.value.docTitle)\n    //console.log(\"Description Value is:\", f.value.docDesc)\n    // console.log(\"Url Value is:\", f.value.docUrl)\n    // console.log(\"Url Value is:\", f.value.docUrl)\n  }\n\n  onCancel() {\n    this.router.navigate(['/contacts']);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}