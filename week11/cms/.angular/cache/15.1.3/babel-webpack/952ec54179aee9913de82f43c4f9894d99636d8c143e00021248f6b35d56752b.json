{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../contacts/contact.service\";\nimport * as i2 from \"@angular/router\";\nexport class MessageItemComponent {\n  constructor(contactService, route, router) {\n    this.contactService = contactService;\n    this.route = route;\n    this.router = router;\n  }\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n      this.id = params['id'];\n      this.contactService.getContact(this.id).subscribe(contactData => {\n        this.contact = contactData.contact;\n      });\n      // this.id = \"48\";\n      // console.log(this.id);\n    });\n  }\n}\n\nMessageItemComponent.ɵfac = function MessageItemComponent_Factory(t) {\n  return new (t || MessageItemComponent)(i0.ɵɵdirectiveInject(i1.ContactService), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router));\n};\nMessageItemComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: MessageItemComponent,\n  selectors: [[\"app-message-item\"]],\n  inputs: {\n    message: \"message\"\n  },\n  decls: 6,\n  vars: 2,\n  consts: [[1, \"list-group-item\", \"clearfix\"], [1, \"messageHeader\"], [1, \"messageText\"]],\n  template: function MessageItemComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"a\", 0)(1, \"div\")(2, \"span\", 1);\n      i0.ɵɵtext(3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 2);\n      i0.ɵɵtext(5);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate(ctx.messageSender);\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate(ctx.message == null ? null : ctx.message.msgText);\n    }\n  },\n  styles: [\".messageHeader[_ngcontent-%COMP%] {\\r\\n  background-color: azure;\\r\\n  border: solid thin black;\\r\\n  border-radius: 10px;\\r\\n  padding: 0.4rem;\\r\\n  font-size: 1.5rem;\\r\\n}\\r\\n.messageText[_ngcontent-%COMP%] {\\r\\nborder-radius: 10px;\\r\\npadding: 5px;\\r\\nmargin-top: .25rem;\\r\\nmargin-left: 1rem;\\r\\nfont-size: 1.5rem;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbWVzc2FnZXMvbWVzc2FnZS1saXN0L21lc3NhZ2UtaXRlbS9tZXNzYWdlLWl0ZW0uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0E7RUFDRSx1QkFBdUI7RUFDdkIsd0JBQXdCO0VBQ3hCLG1CQUFtQjtFQUNuQixlQUFlO0VBQ2YsaUJBQWlCO0FBQ25CO0FBQ0E7QUFDQSxtQkFBbUI7QUFDbkIsWUFBWTtBQUNaLGtCQUFrQjtBQUNsQixpQkFBaUI7QUFDakIsaUJBQWlCO0FBQ2pCIiwic291cmNlc0NvbnRlbnQiOlsiXHJcbi5tZXNzYWdlSGVhZGVyIHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiBhenVyZTtcclxuICBib3JkZXI6IHNvbGlkIHRoaW4gYmxhY2s7XHJcbiAgYm9yZGVyLXJhZGl1czogMTBweDtcclxuICBwYWRkaW5nOiAwLjRyZW07XHJcbiAgZm9udC1zaXplOiAxLjVyZW07XHJcbn1cclxuLm1lc3NhZ2VUZXh0IHtcclxuYm9yZGVyLXJhZGl1czogMTBweDtcclxucGFkZGluZzogNXB4O1xyXG5tYXJnaW4tdG9wOiAuMjVyZW07XHJcbm1hcmdpbi1sZWZ0OiAxcmVtO1xyXG5mb250LXNpemU6IDEuNXJlbTtcclxufVxyXG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":";;;AAWA,OAAM,MAAOA,oBAAoB;EAI/BC,YAAoBC,cAA8B,EACxCC,KAAqB,EACrBC,MAAc;IAFJ,mBAAc,GAAdF,cAAc;IACxB,UAAK,GAALC,KAAK;IACL,WAAM,GAANC,MAAM;EACX;EAELC,QAAQ;IACN,IAAI,CAACF,KAAK,CAACG,MAAM,CAChBC,SAAS,CACPD,MAAc,IAAI;MACjB,IAAI,CAACE,EAAE,GAAGF,MAAM,CAAC,IAAI,CAAC;MACtB,IAAI,CAACJ,cAAc,CAACO,UAAU,CAAC,IAAI,CAACD,EAAE,CAAC,CACtCD,SAAS,CAACG,WAAW,IAAG;QACvB,IAAI,CAACC,OAAO,GAAGD,WAAW,CAACC,OAAO;MACpC,CAAC,CAAC;MACF;MACA;IACF,CAAC,CACF;EACH;;;AAtBWX,oBAAoB;mBAApBA,oBAAoB;AAAA;AAApBA,oBAAoB;QAApBA,oBAAoB;EAAAY;EAAAC;IAAAC;EAAA;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCVjCC,4BAAoC;MAERA,YAAmB;MAAAA,iBAAO;MACtDA,8BAAyB;MAAAA,YAAsB;MAAAA,iBAAM;;;MADzBA,eAAmB;MAAnBA,uCAAmB;MACtBA,eAAsB;MAAtBA,sEAAsB","names":["MessageItemComponent","constructor","contactService","route","router","ngOnInit","params","subscribe","id","getContact","contactData","contact","selectors","inputs","message","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["C:\\data\\A-byu\\Full Stack Dev WDD 430\\code\\wdd430\\byui-winter\\week11\\cms\\src\\app\\messages\\message-list\\message-item\\message-item.component.ts","C:\\data\\A-byu\\Full Stack Dev WDD 430\\code\\wdd430\\byui-winter\\week11\\cms\\src\\app\\messages\\message-list\\message-item\\message-item.component.html"],"sourcesContent":["import { Component, EventEmitter, Input, Output, OnInit } from '@angular/core';\nimport { Message } from '../../message.model';\nimport { MessageService } from '../../message.service';\nimport { Contact } from '../../../contacts/contact.model';\nimport { ContactService } from '../../../contacts/contact.service';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\n@Component({\n  selector: 'app-message-item',\n  templateUrl: './message-item.component.html',\n  styleUrls: ['./message-item.component.css'],\n})\nexport class MessageItemComponent implements OnInit {\n  @Input() message: Message;\n  messageSender: string;\n\n  constructor(private contactService: ContactService,\n    private route: ActivatedRoute,\n    private router: Router\n    ) {}\n\n  ngOnInit() {\n    this.route.params\n    .subscribe(\n      (params: Params) => {\n        this.id = params['id'];\n        this.contactService.getContact(this.id)\n        .subscribe(contactData => {\n          this.contact = contactData.contact;\n        });\n        // this.id = \"48\";\n        // console.log(this.id);\n      }\n    );\n  }\n\n//   ngOnInit() {\n//     this.contactService\n//       .getContact(this.message.sender.id)\n//       .subscribe((contactData) => {\n//         this.messageSender = contactData.contact.name;\n//       });\n//   }\n// }\n// import { Component, EventEmitter, Input, Output } from '@angular/core';\n// import { Message } from '../../message.model'\n\n// @Component({\n//   selector: 'app-message-item',\n//   templateUrl: './message-item.component.html',\n//   styleUrls: ['./message-item.component.css']\n// })\n\n// export class MessageItemComponent {\n//  @Input() message: Message;\n//  @Output() messageSelected = new EventEmitter<void>();\n//  onSelected() {\n//   this.messageSelected.emit();\n// }\n\n// }\n","\n<a class=\"list-group-item clearfix\">\n<div>\n<span class=\"messageHeader\">{{ messageSender }}</span>\n<div class=\"messageText\">{{ message?.msgText }}</div>\n</div>\n</a>\n<!-- <a class=\"list-group-item clearfix\" (click)=\"onSelected()\">\n  <div class=\"\">\n    <span class=\"messageHeader\">{{ message.sender }}</span>\n    <div class=\"messageText\">{{ message.msgText }}</div>\n  </div>\n</a> -->\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}