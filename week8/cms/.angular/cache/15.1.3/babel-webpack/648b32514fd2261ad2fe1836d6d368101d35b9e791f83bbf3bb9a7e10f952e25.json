{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { MOCKDOCUMENTS } from './MOCKDOCUMENTS';\nimport * as i0 from \"@angular/core\";\nexport class DocumentService {\n  constructor() {\n    this.document = [];\n    this.documentSelectedEvent = new EventEmitter();\n    this.document = MOCKDOCUMENTS;\n  }\n  getDocuments() {\n    return this.document.slice();\n  }\n  //  getDocument(id:string){\n  //   // return this.documents.slice();\n  //   console.log (\"getDocument ID = \", id)\n  // }\n  getDocument(id) {\n    // this.strid = this.id.toString();\n    // console.log(id);\n    // return this.document[id];\n  }\n}\nDocumentService.ɵfac = function DocumentService_Factory(t) {\n  return new (t || DocumentService)();\n};\nDocumentService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: DocumentService,\n  factory: DocumentService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAAA,SAAqBA,YAAY,QAAQ,eAAe;AAExD,SAASC,aAAa,QAAQ,iBAAiB;;AAK/C,OAAM,MAAOC,eAAe;EAI1BC;IAHA,aAAQ,GAAe,EAAE;IACzB,0BAAqB,GAAG,IAAIH,YAAY,EAAY;IAGlD,IAAI,CAACI,QAAQ,GAAGH,aAAa;EAC/B;EAEAI,YAAY;IACV,OAAO,IAAI,CAACD,QAAQ,CAACE,KAAK,EAAE;EAC9B;EACA;EACA;EACA;EACA;EACCC,WAAW,CAACC,EAAU;IACrB;IACD;IACC;EAAA;;AAlBSN,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;SAAfA,eAAe;EAAAO,SAAfP,eAAe;EAAAQ,YAFd;AAAM","names":["EventEmitter","MOCKDOCUMENTS","DocumentService","constructor","document","getDocuments","slice","getDocument","id","factory","providedIn"],"sourceRoot":"","sources":["C:\\data\\A-byu\\Full Stack Dev WDD 430\\code\\wdd430\\byui-winter\\week6\\cms\\src\\app\\documents\\document.service.ts"],"sourcesContent":["import { Injectable, EventEmitter } from '@angular/core';\nimport { Document } from './documents.model';\nimport { MOCKDOCUMENTS } from './MOCKDOCUMENTS';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DocumentService {\n  document: Document[] = [];\n  documentSelectedEvent = new EventEmitter<Document>();\n  strid: string;\n  constructor() {\n    this.document = MOCKDOCUMENTS;\n  }\n\n  getDocuments() {\n    return this.document.slice();\n  }\n  //  getDocument(id:string){\n  //   // return this.documents.slice();\n  //   console.log (\"getDocument ID = \", id)\n  // }\n   getDocument(id: string)  {\n    // this.strid = this.id.toString();\n   // console.log(id);\n    // return this.document[id];\n   }\n  //  getDocument(id: string): Document {\n  //   for (let document of this.document) {\n  //     if (document.id === id) {\n  //     console.log(document);\n  //        return document;\n  //      }\n  //    }\n  //  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}