{"ast":null,"code":"var _class;\nimport { __decorate } from \"tslib\";\nimport { Injectable } from '@angular/core';\nimport { MOCKCONTACTS } from './MOCKCONTACTS';\nimport * as i0 from \"@angular/core\";\nlet ContactService = (_class = class ContactService {\n  constructor() {\n    this.contacts = [];\n    this.contacts = MOCKCONTACTS;\n  }\n  getContacts() {\n    console.log(this.contacts);\n    console.log(this.contacts.slice());\n    return this.contacts.slice();\n  }\n}, _class.ɵfac = function ContactService_Factory(t) {\n  return new (t || _class)();\n}, _class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac\n}), _class);\nContactService = __decorate([Injectable({\n  providedIn: 'root'\n})], ContactService);\nexport { ContactService };","map":{"version":3,"mappings":";;AAAA,SAASA,UAAU,QAAQ,eAAe;AAE1C,SAASC,YAAY,QAAQ,gBAAgB;;AAKtC,IAAMC,cAAc,aAApB,MAAMA,cAAc;EAExBC;IADA,aAAQ,GAAc,EAAE;IAErB,IAAI,CAACC,QAAQ,GAAGH,YAAY;EAC/B;EACCI,WAAW;IACdC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACH,QAAQ,CAAC;IAC1BE,OAAO,CAACC,GAAG,CAAC,IAAI,CAACH,QAAQ,CAACI,KAAK,EAAE,CAAC;IAClC,OAAO,IAAI,CAACJ,QAAQ,CAACI,KAAK,EAAE;EAC5B;;mBATYN,MAAc;AAAA;SAAdA,MAAc;EAAAO,SAAdP,MAAc;AAAA;AAAdA,cAAc,eAH1BF,UAAU,CAAC;EACVU,UAAU,EAAE;CACb,CAAC,GACWR,cAAc,CAU1B;SAVYA,cAAc","names":["Injectable","MOCKCONTACTS","ContactService","constructor","contacts","getContacts","console","log","slice","factory","providedIn"],"sourceRoot":"","sources":["C:\\data\\A-byu\\Full Stack Dev WDD 430\\code\\wdd430\\byui-winter\\week5\\cms\\src\\app\\contacts\\contact.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Contact } from './contact.model';\nimport { MOCKCONTACTS } from './MOCKCONTACTS';\n@Injectable()\n@Injectable({\n  providedIn: 'root'\n})\nexport class ContactService {\n   contacts: Contact [] =[];\n   constructor() {\n      this.contacts = MOCKCONTACTS;\n   }\n    getContacts() {\n console.log(this.contacts);\n console.log(this.contacts.slice());\n return this.contacts.slice();\n }\n}\n\n\n\n//  getContact(id: string): Contact {\n//  for (let contact of this.contacts) {\n//    if (contact.id == id) {\n//     return contact;\n//     }\n//    }\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}