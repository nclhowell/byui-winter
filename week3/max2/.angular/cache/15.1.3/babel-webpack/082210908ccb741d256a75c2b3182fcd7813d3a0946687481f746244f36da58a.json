{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nfunction AppComponent_div_19_strong_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"strong\", 11);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const element_r1 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(element_r1.content);\n  }\n}\nfunction AppComponent_div_19_em_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"em\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const element_r1 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(element_r1.content);\n  }\n}\nfunction AppComponent_div_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 6)(1, \"div\", 7);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 8)(4, \"p\");\n    i0.ɵɵtemplate(5, AppComponent_div_19_strong_5_Template, 2, 1, \"strong\", 9);\n    i0.ɵɵtemplate(6, AppComponent_div_19_em_6_Template, 2, 1, \"em\", 10);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const element_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(element_r1.name);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", element_r1.type === \"server\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", element_r1.type === \"blueprint\");\n  }\n}\nexport class AppComponent {\n  constructor() {\n    this.serverElements = [];\n    this.newServerName = '';\n    this.newServerContent = '';\n  }\n  onAddServer() {\n    this.serverElements.push({\n      type: 'server',\n      name: this.newServerName,\n      content: this.newServerContent\n    });\n  }\n  onAddBlueprint() {\n    this.serverElements.push({\n      type: 'blueprint',\n      name: this.newServerName,\n      content: this.newServerContent\n    });\n  }\n}\nAppComponent.ɵfac = function AppComponent_Factory(t) {\n  return new (t || AppComponent)();\n};\nAppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AppComponent,\n  selectors: [[\"app-root\"]],\n  decls: 20,\n  vars: 3,\n  consts: [[1, \"container\"], [1, \"row\"], [1, \"col-xs-12\"], [\"type\", \"text\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [1, \"btn\", \"btn-primary\", 3, \"click\"], [\"class\", \"panel panel-default\", 4, \"ngFor\", \"ngForOf\"], [1, \"panel\", \"panel-default\"], [1, \"panel-heading\"], [1, \"panel-body\"], [\"style\", \"color: red\", 4, \"ngIf\"], [4, \"ngIf\"], [2, \"color\", \"red\"]],\n  template: function AppComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"p\");\n      i0.ɵɵtext(4, \"Add new Servers or blueprints!\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"label\");\n      i0.ɵɵtext(6, \"Server Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"input\", 3);\n      i0.ɵɵlistener(\"ngModelChange\", function AppComponent_Template_input_ngModelChange_7_listener($event) {\n        return ctx.newServerName = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"label\");\n      i0.ɵɵtext(9, \"Server Content\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"input\", 3);\n      i0.ɵɵlistener(\"ngModelChange\", function AppComponent_Template_input_ngModelChange_10_listener($event) {\n        return ctx.newServerContent = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(11, \"br\");\n      i0.ɵɵelementStart(12, \"button\", 4);\n      i0.ɵɵlistener(\"click\", function AppComponent_Template_button_click_12_listener() {\n        return ctx.onAddServer();\n      });\n      i0.ɵɵtext(13, \"Add Server\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"button\", 4);\n      i0.ɵɵlistener(\"click\", function AppComponent_Template_button_click_14_listener() {\n        return ctx.onAddBlueprint();\n      });\n      i0.ɵɵtext(15, \"Add Server Blueprint\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelement(16, \"hr\");\n      i0.ɵɵelementStart(17, \"div\", 1)(18, \"div\", 2);\n      i0.ɵɵtemplate(19, AppComponent_div_19_Template, 7, 3, \"div\", 5);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngModel\", ctx.newServerName);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngModel\", ctx.newServerContent);\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"ngForOf\", ctx.serverElements);\n    }\n  },\n  dependencies: [i1.NgForOf, i1.NgIf, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgModel],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;IA0BYA,kCAA6D;IAAAA,YAAqB;IAAAA,iBAAS;;;;IAA9BA,eAAqB;IAArBA,wCAAqB;;;;;IAClFA,0BAAyC;IAAAA,YAAqB;IAAAA,iBAAK;;;;IAA1BA,eAAqB;IAArBA,wCAAqB;;;;;IAPpEA,8BAEyC;IACZA,YAAkB;IAAAA,iBAAM;IACnDA,8BAAwB;IAEpBA,0EAA2F;IAC3FA,mEAAmE;IACrEA,iBAAI;;;;IALqBA,eAAkB;IAAlBA,qCAAkB;IAGhCA,eAA+B;IAA/BA,mDAA+B;IACnCA,eAAkC;IAAlCA,sDAAkC;;;ACpBnD,OAAM,MAAOC,YAAY;EALzBC;IAME,mBAAc,GAAG,EAAE;IACnB,kBAAa,GAAG,EAAE;IAClB,qBAAgB,GAAG,EAAE;;EAErBC,WAAW;IACT,IAAI,CAACC,cAAc,CAACC,IAAI,CAAC;MACvBC,IAAI,EAAE,QAAQ;MACdC,IAAI,EAAE,IAAI,CAACC,aAAa;MACxBC,OAAO,EAAE,IAAI,CAACC;KACf,CAAC;EACJ;EAEAC,cAAc;IACZ,IAAI,CAACP,cAAc,CAACC,IAAI,CAAC;MACvBC,IAAI,EAAE,WAAW;MACjBC,IAAI,EAAE,IAAI,CAACC,aAAa;MACxBC,OAAO,EAAE,IAAI,CAACC;KACf,CAAC;EACJ;;AAnBWT,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;QAAZA,YAAY;EAAAW;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDPzBhB,8BAAuB;MAGdA,8CAA8B;MAAAA,iBAAI;MACrCA,6BAAO;MAAAA,2BAAW;MAAAA,iBAAQ;MAC1BA,gCAAoE;MAA5BA;QAAA;MAAA,EAA2B;MAAnEA,iBAAoE;MACpEA,6BAAO;MAAAA,8BAAc;MAAAA,iBAAQ;MAC7BA,iCAAuE;MAA/BA;QAAA;MAAA,EAA8B;MAAtEA,iBAAuE;MACvEA,sBAAI;MACJA,kCAE0B;MAAxBA;QAAA,OAASiB,iBAAa;MAAA,EAAC;MAACjB,2BAAU;MAAAA,iBAAS;MAC7CA,kCAE6B;MAA3BA;QAAA,OAASiB,oBAAgB;MAAA,EAAC;MAACjB,qCAAoB;MAAAA,iBAAS;MAG9DA,sBAAI;MACJA,+BAAiB;MAEbA,+DAUM;MACRA,iBAAM;;;MA1BoCA,eAA2B;MAA3BA,2CAA2B;MAE3BA,eAA8B;MAA9BA,8CAA8B;MAehDA,eAAiB;MAAjBA,4CAAiB","names":["i0","AppComponent","constructor","onAddServer","serverElements","push","type","name","newServerName","content","newServerContent","onAddBlueprint","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\data\\A-byu\\Full Stack Dev WDD 430\\code\\wdd430\\byui-winter\\week3\\max2\\src\\app\\app.component.html","C:\\data\\A-byu\\Full Stack Dev WDD 430\\code\\wdd430\\byui-winter\\week3\\max2\\src\\app\\app.component.ts"],"sourcesContent":["<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col-xs-12\">\n      <p>Add new Servers or blueprints!</p>\n      <label>Server Name</label>\n      <input type=\"text\" class=\"form-control\" [(ngModel)]=\"newServerName\">\n      <label>Server Content</label>\n      <input type=\"text\" class=\"form-control\" [(ngModel)]=\"newServerContent\">\n      <br>\n      <button\n        class=\"btn btn-primary\"\n        (click)=\"onAddServer()\">Add Server</button>\n      <button\n        class=\"btn btn-primary\"\n        (click)=\"onAddBlueprint()\">Add Server Blueprint</button>\n    </div>\n  </div>\n  <hr>\n  <div class=\"row\">\n    <div class=\"col-xs-12\">\n      <div\n        class=\"panel panel-default\"\n        *ngFor=\"let element of serverElements\">\n        <div class=\"panel-heading\">{{ element.name }}</div>\n        <div class=\"panel-body\">\n          <p>\n            <strong *ngIf=\"element.type === 'server'\" style=\"color: red\">{{ element.content }}</strong>\n            <em *ngIf=\"element.type === 'blueprint'\">{{ element.content }}</em>\n          </p>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  serverElements = [];\n  newServerName = '';\n  newServerContent = '';\n\n  onAddServer() {\n    this.serverElements.push({\n      type: 'server',\n      name: this.newServerName,\n      content: this.newServerContent\n    });\n  }\n\n  onAddBlueprint() {\n    this.serverElements.push({\n      type: 'blueprint',\n      name: this.newServerName,\n      content: this.newServerContent\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}