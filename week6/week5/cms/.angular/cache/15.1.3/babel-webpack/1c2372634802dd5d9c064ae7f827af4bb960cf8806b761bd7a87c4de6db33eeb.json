{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { MOCKCONTACTS } from './MOCKCONTACTS';\nimport * as i0 from \"@angular/core\";\nexport class ContactService {\n  constructor() {\n    this.contacts = [];\n    this.contactSelected = new EventEmitter();\n    this.contacts = MOCKCONTACTS;\n  }\n  getContacts() {\n    console.log(this.contacts);\n    console.log(this.contacts.slice());\n    return this.contacts.slice();\n  }\n  getContact(id) {\n    for (let contact of this.contacts) {\n      if (contact.id == id) {\n        return contact;\n      }\n    }\n  }\n}\nContactService.ɵfac = function ContactService_Factory(t) {\n  return new (t || ContactService)();\n};\nContactService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ContactService,\n  factory: ContactService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAAA,SAASA,YAAY,QAAoB,eAAe;AAExD,SAASC,YAAY,QAAQ,gBAAgB;;AAI7C,OAAM,MAAOC,cAAc;EAIzBC;IAHA,aAAQ,GAAc,EAAE;IACtB,oBAAe,GAAG,IAAIH,YAAY,EAAW;IAG7C,IAAI,CAACI,QAAQ,GAAGH,YAAY;EAC9B;EACAI,WAAW;IACTC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACH,QAAQ,CAAC;IAC1BE,OAAO,CAACC,GAAG,CAAC,IAAI,CAACH,QAAQ,CAACI,KAAK,EAAE,CAAC;IAClC,OAAO,IAAI,CAACJ,QAAQ,CAACI,KAAK,EAAE;EAC9B;EAEAC,UAAU,CAACC,EAAU;IACnB,KAAK,IAAIC,OAAO,IAAI,IAAI,CAACP,QAAQ,EAAE;MACjC,IAAIO,OAAO,CAACD,EAAE,IAAIA,EAAE,EAAE;QACpB,OAAOC,OAAO;;;EAGpB;;AAnBWT,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;SAAdA,cAAc;EAAAU,SAAdV,cAAc;EAAAW,YAFb;AAAM","names":["EventEmitter","MOCKCONTACTS","ContactService","constructor","contacts","getContacts","console","log","slice","getContact","id","contact","factory","providedIn"],"sourceRoot":"","sources":["C:\\data\\A-byu\\Full Stack Dev WDD 430\\code\\wdd430\\byui-winter\\week5\\cms\\src\\app\\contacts\\contact.service.ts"],"sourcesContent":["import { EventEmitter, Injectable } from '@angular/core';\nimport { Contact } from './contact.model';\nimport { MOCKCONTACTS } from './MOCKCONTACTS';\n@Injectable({\n  providedIn: 'root',\n})\nexport class ContactService {\n  contacts: Contact[] = [];\n    contactSelected = new EventEmitter<Contact>();\n\n  constructor() {\n    this.contacts = MOCKCONTACTS;\n  }\n  getContacts() {\n    console.log(this.contacts);\n    console.log(this.contacts.slice());\n    return this.contacts.slice();\n  }\n\n  getContact(id: string): Contact {\n    for (let contact of this.contacts) {\n      if (contact.id == id) {\n        return contact;\n      }\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}