{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { Message } from '../../message.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../message.service\";\nconst _c0 = [\"subjectInput\"];\nconst _c1 = [\"msgTextInput\"];\nexport class MessageEditComponent {\n  constructor(messageService) {\n    this.messageService = messageService;\n    this.currentSender = 'Layne';\n    this.messageAdded = new EventEmitter();\n  }\n  ngOnInit() {}\n  addMessage() {\n    const subject = this.subjectInputRef.nativeElement.value;\n    const msgText = this.msgTextInputRef.nativeElement.value;\n    const newMessage = new Message(\"99\", subject, msgText, this.currentSender);\n    this.messageAdded.emit(newMessage);\n    this.messageService.addMessage(newMessage);\n  }\n  onClear() {\n    console.log('Clear Message ran');\n    this.subjectInputRef.nativeElement.value = '';\n    this.msgTextInputRef.nativeElement.value = '';\n  }\n}\nMessageEditComponent.ɵfac = function MessageEditComponent_Factory(t) {\n  return new (t || MessageEditComponent)(i0.ɵɵdirectiveInject(i1.MessageService));\n};\nMessageEditComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: MessageEditComponent,\n  selectors: [[\"app-message-edit\"]],\n  viewQuery: function MessageEditComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n      i0.ɵɵviewQuery(_c1, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.subjectInputRef = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.msgTextInputRef = _t.first);\n    }\n  },\n  outputs: {\n    messageAdded: \"messageAdded\"\n  },\n  decls: 20,\n  vars: 0,\n  consts: [[1, \"panel\", \"panel-default\"], [1, \"panel-body\"], [1, \"row\"], [1, \"col-sm-12\", \"form-group\"], [\"for\", \"subject\"], [\"type\", \"text\", \"id\", \"subjectInput\", \"size\", \"120\", \"max\", \"120\", 1, \"form-control\"], [\"subjectInput\", \"\"], [\"for\", \"message\"], [\"type\", \"text\", \"id\", \"msgTextInput\", \"max\", \"255\", \"size\", \"120\", 1, \"form-control\"], [\"msgTextInput\", \"\"], [1, \"col-xs-12\"], [\"type\", \"submit\", 1, \"btn\", \"btn-success\", 3, \"click\"], [\"type\", \"submit\", 1, \"btn\", \"btn-danger\", 3, \"click\"]],\n  template: function MessageEditComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"form\")(3, \"div\", 2)(4, \"div\", 3)(5, \"label\", 4);\n      i0.ɵɵtext(6, \"Subject\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(7, \"input\", 5, 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"div\", 3)(10, \"label\", 7);\n      i0.ɵɵtext(11, \"Message\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(12, \"input\", 8, 9);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(14, \"div\", 2)(15, \"div\", 10)(16, \"button\", 11);\n      i0.ɵɵlistener(\"click\", function MessageEditComponent_Template_button_click_16_listener() {\n        return ctx.addMessage();\n      });\n      i0.ɵɵtext(17, \" Send \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"button\", 12);\n      i0.ɵɵlistener(\"click\", function MessageEditComponent_Template_button_click_18_listener() {\n        return ctx.onClear();\n      });\n      i0.ɵɵtext(19, \" Clear \");\n      i0.ɵɵelementEnd()()()()();\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AAAA,SAKEA,YAAY,QAEP,eAAe;AACtB,SAASC,OAAO,QAAQ,qBAAqB;;;;;AAQ7C,OAAM,MAAOC,oBAAoB;EAO/BC,YAAoBC,cAA8B;IAA9B,mBAAc,GAAdA,cAAc;IALlC,kBAAa,GAAG,OAAO;IAGb,iBAAY,GAAG,IAAIJ,YAAY,EAAW;EAEC;EAErDK,QAAQ,IAAI;EAEZC,UAAU;IACR,MAAMC,OAAO,GAAG,IAAI,CAACC,eAAe,CAACC,aAAa,CAACC,KAAK;IACxD,MAAMC,OAAO,GAAG,IAAI,CAACC,eAAe,CAACH,aAAa,CAACC,KAAK;IACxD,MAAMG,UAAU,GAAG,IAAIZ,OAAO,CAAC,IAAI,EAAEM,OAAO,EAAEI,OAAO,EAAE,IAAI,CAACG,aAAa,CAAC;IAC1E,IAAI,CAACC,YAAY,CAACC,IAAI,CAACH,UAAU,CAAC;IAClC,IAAI,CAACT,cAAc,CAACE,UAAU,CAACO,UAAU,CAAC;EAC5C;EACAI,OAAO;IACLC,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;IAChC,IAAI,CAACX,eAAe,CAACC,aAAa,CAACC,KAAK,GAAG,EAAE;IAC7C,IAAI,CAACE,eAAe,CAACH,aAAa,CAACC,KAAK,GAAG,EAAE;EAC/C;;AAtBWR,oBAAoB;mBAApBA,oBAAoB;AAAA;AAApBA,oBAAoB;QAApBA,oBAAoB;EAAAkB;EAAAC;IAAA;;;;;;;;;;;;;;;;;;MChBjCC,8BAAiC;MAMFA,uBAAO;MAAAA,iBAAQ;MACpCA,8BAOE;MACJA,iBAAM;MACNA,8BAAkC;MACXA,wBAAO;MAAAA,iBAAQ;MACpCA,+BAOE;MACJA,iBAAM;MAGVA,+BAAiB;MAEiCA;QAAA,OAASC,gBAAY;MAAA,EAAC;MAClED,uBACF;MAAAA,iBAAS;MAETA,mCAAiE;MAApBA;QAAA,OAASC,aAAS;MAAA,EAAC;MAC9DD,wBACF;MAAAA,iBAAS","names":["EventEmitter","Message","MessageEditComponent","constructor","messageService","ngOnInit","addMessage","subject","subjectInputRef","nativeElement","value","msgText","msgTextInputRef","newMessage","currentSender","messageAdded","emit","onClear","console","log","selectors","viewQuery","i0","ctx"],"sourceRoot":"","sources":["C:\\data\\A-byu\\Full Stack Dev WDD 430\\code\\wdd430\\byui-winter\\week5\\cms\\src\\app\\messages\\message-list\\message-edit\\message-edit.component.ts","C:\\data\\A-byu\\Full Stack Dev WDD 430\\code\\wdd430\\byui-winter\\week5\\cms\\src\\app\\messages\\message-list\\message-edit\\message-edit.component.html"],"sourcesContent":["import {\n  Component,\n  OnInit,\n  ElementRef,\n  ViewChild,\n  EventEmitter,\n  Output,\n} from '@angular/core';\nimport { Message } from '../../message.model';\nimport { MessageService } from '../../message.service';\n\n@Component({\n  selector: 'app-message-edit',\n  templateUrl: './message-edit.component.html',\n  styleUrls: ['./message-edit.component.css'],\n})\nexport class MessageEditComponent implements OnInit {\n  messages: Message[];\n  currentSender = 'Layne';\n  @ViewChild('subjectInput', { static: false }) subjectInputRef: ElementRef;\n  @ViewChild('msgTextInput', { static: false }) msgTextInputRef: ElementRef;\n  @Output() messageAdded = new EventEmitter<Message>();\n\n  constructor(private messageService: MessageService) {}\n\n  ngOnInit() {}\n\n  addMessage() {\n    const subject = this.subjectInputRef.nativeElement.value;\n    const msgText = this.msgTextInputRef.nativeElement.value;\n    const newMessage = new Message(\"99\", subject, msgText, this.currentSender);\n    this.messageAdded.emit(newMessage);\n    this.messageService.addMessage(newMessage);\n  }\n  onClear() {\n    console.log('Clear Message ran');\n    this.subjectInputRef.nativeElement.value = '';\n    this.msgTextInputRef.nativeElement.value = '';\n  }\n}\n","<div class=\"panel panel-default\">\n  <div class=\"panel-body\">\n    <!-- <form id=\"document-edit\"> -->\n    <form>\n      <div class=\"row\">\n        <div class=\"col-sm-12 form-group\">\n          <label for=\"subject\">Subject</label>\n          <input\n            type=\"text\"\n            id=\"subjectInput\"\n            class=\"form-control\"\n            size=\"120\"\n            max=\"120\"\n            #subjectInput\n          />\n        </div>\n        <div class=\"col-sm-12 form-group\">\n          <label for=\"message\">Message</label>\n          <input\n            type=\"text\"\n            id=\"msgTextInput\"\n            class=\"form-control\"\n            max=\"255\"\n            size=\"120\"\n            #msgTextInput\n          />\n        </div>\n      </div>\n    </form>\n    <div class=\"row\">\n      <div class=\"col-xs-12\">\n        <button class=\"btn btn-success\" type=\"submit\" (click)=\"addMessage()\">\n          Send\n        </button>\n\n        <button class=\"btn btn-danger\" type=\"submit\" (click)=\"onClear()\">\n          Clear\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}