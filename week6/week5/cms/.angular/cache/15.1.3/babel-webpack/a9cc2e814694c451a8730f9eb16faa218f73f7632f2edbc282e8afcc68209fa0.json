{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../message.service\";\nimport * as i2 from \"./message-item/message-item.component\";\nimport * as i3 from \"./message-edit/message-edit.component\";\n// import { MessageItem } from '../message';\nexport class MessageListComponent {\n  constructor(messageService) {\n    this.messageService = messageService;\n  }\n  ngOnInit() {\n    this.messages = this.messageService.getMessages();\n    this.messageService.messageChangedEvent.subscribe(messages => {\n      this.messages = this.messageService.messages;\n    });\n  }\n  onSelected(message) {\n    this.messageService.messageSelectedEvent.emit(message);\n    console.log(message);\n    // this.messageService.messageSelectedEvent.emit(message);\n  }\n\n  onMessageAdded(message) {\n    console.log(\"Message about to be pushed\");\n    this.messages = this.messageService.messages;\n    // this.messages.push(message);\n  }\n}\n\nMessageListComponent.ɵfac = function MessageListComponent_Factory(t) {\n  return new (t || MessageListComponent)(i0.ɵɵdirectiveInject(i1.MessageService));\n};\nMessageListComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: MessageListComponent,\n  selectors: [[\"app-message-list\"]],\n  decls: 14,\n  vars: 0,\n  consts: [[1, \"row\"], [1, \"col-md-100\"], [1, \"panel\", \"panel-default\"], [1, \"panel-heading\"], [1, \"row\", \"pad-left-right\"], [1, \"title\", \"pull-left\"], [1, \"panel-body\"], [1, \"col-xs-12\"], [1, \"panel-footer\"], [3, \"messageAdded\"]],\n  template: function MessageListComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"span\", 5);\n      i0.ɵɵtext(6, \"Messages\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(7, \"div\", 6)(8, \"div\", 0)(9, \"div\", 7);\n      i0.ɵɵelement(10, \"app-message-item\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(11, \"div\", 8)(12, \"app-message-edit\", 9);\n      i0.ɵɵlistener(\"messageAdded\", function MessageListComponent_Template_app_message_edit_messageAdded_12_listener($event) {\n        return ctx.onMessageAdded($event);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(13, \"hr\");\n      i0.ɵɵelementEnd()()()();\n    }\n  },\n  dependencies: [i2.MessageItemComponent, i3.MessageEditComponent],\n  styles: [\".title[_ngcontent-%COMP%] {\\r\\n  font-size: 2.5rem;\\r\\n  font-weight: bold;\\r\\n}\\r\\n.pad-left-right[_ngcontent-%COMP%] {\\r\\n  padding-left: 1rem;\\r\\n  padding-right: 1rem;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbWVzc2FnZXMvbWVzc2FnZS1saXN0L21lc3NhZ2UtbGlzdC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsaUJBQWlCO0VBQ2pCLGlCQUFpQjtBQUNuQjtBQUNBO0VBQ0Usa0JBQWtCO0VBQ2xCLG1CQUFtQjtBQUNyQiIsInNvdXJjZXNDb250ZW50IjpbIi50aXRsZSB7XHJcbiAgZm9udC1zaXplOiAyLjVyZW07XHJcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbn1cclxuLnBhZC1sZWZ0LXJpZ2h0IHtcclxuICBwYWRkaW5nLWxlZnQ6IDFyZW07XHJcbiAgcGFkZGluZy1yaWdodDogMXJlbTtcclxufVxyXG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":";;;;AAGA;AAOA,OAAM,MAAOA,oBAAoB;EAGjCC,YAAoBC,cAA8B;IAA9B,mBAAc,GAAdA,cAAc;EAC9B;EAEJC,QAAQ;IACP,IAAI,CAACC,QAAQ,GAAG,IAAI,CAACF,cAAc,CAACG,WAAW,EAAE;IAC9C,IAAI,CAACH,cAAc,CAACI,mBAAmB,CACpCC,SAAS,CACPH,QAAmB,IAAI;MACtB,IAAI,CAACA,QAAQ,GAAG,IAAI,CAACF,cAAc,CAACE,QAAQ;IAC9C,CAAC,CACF;EACP;EAEAI,UAAU,CAACC,OAAgB;IACxB,IAAI,CAACP,cAAc,CAACQ,oBAAoB,CAACC,IAAI,CAACF,OAAO,CAAC;IACtDG,OAAO,CAACC,GAAG,CAACJ,OAAO,CAAC;IACpB;EACH;;EAECK,cAAc,CAACL,OAAgB;IAC/BG,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC;IACvC,IAAI,CAACT,QAAQ,GAAG,IAAI,CAACF,cAAc,CAACE,QAAQ;IAC5C;EACA;;;AA1BUJ,oBAAoB;mBAApBA,oBAAoB;AAAA;AAApBA,oBAAoB;QAApBA,oBAAoB;EAAAe;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCVjCC,8BAAiB;MAKuBA,wBAAQ;MAAAA,iBAAO;MAGjDA,8BAAwB;MAGjBA,oCAAqC;MAMxCA,iBAAM;MAGVA,+BAA0B;MAGxBA;QAAA,OAAgBC,0BAAsB;MAAA,EAAC;MAACD,iBAAmB;MACzDA,sBAAI;MACRA,iBAAM","names":["MessageListComponent","constructor","messageService","ngOnInit","messages","getMessages","messageChangedEvent","subscribe","onSelected","message","messageSelectedEvent","emit","console","log","onMessageAdded","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\data\\A-byu\\Full Stack Dev WDD 430\\code\\wdd430\\byui-winter\\week5\\cms\\src\\app\\messages\\message-list\\message-list.component.ts","C:\\data\\A-byu\\Full Stack Dev WDD 430\\code\\wdd430\\byui-winter\\week5\\cms\\src\\app\\messages\\message-list\\message-list.component.html"],"sourcesContent":["import { Component, OnInit, EventEmitter} from '@angular/core';\nimport { Message } from '../message.model';\nimport { MessageService } from '../message.service';\n// import { MessageItem } from '../message';\n\n@Component({\n  selector: 'app-message-list',\n  templateUrl: './message-list.component.html',\n  styleUrls: ['./message-list.component.css'],\n})\nexport class MessageListComponent implements OnInit {\n  messages: Message[];\n\nconstructor(private messageService: MessageService) {\n    }\n\nngOnInit() {\n this.messages = this.messageService.getMessages();\n    this.messageService.messageChangedEvent\n      .subscribe(\n        (messages: Message[]) => {\n          this.messages = this.messageService.messages;\n        }\n      );\n}\n\nonSelected(message: Message) {\n   this.messageService.messageSelectedEvent.emit(message);\n   console.log(message);\n   // this.messageService.messageSelectedEvent.emit(message);\n}\n\n onMessageAdded(message: Message) {\n console.log(\"Message about to be pushed\")\n   this.messages = this.messageService.messages;\n   // this.messages.push(message);\n   }\n\n\n  }\n\n// import { Component, EventEmitter, Output } from '@angular/core';\n// import { Message } from '../message.model';\n// @Component({\n//   selector: 'app-message-list',\n//   templateUrl: './message-list.component.html',\n//   styleUrls: ['./message-list.component.css']\n// })\n// export class MessageListComponent {\n//     // @Output() messageWasSelected = new EventEmitter<Message>();\n//     messages: Message[] = [\n//     new Message(\"1\", \"Why Me?\", \"Please text me back, Jack\", \"Joe Shmo\"),\n//     new Message(\"2\", \"Who Dat?\", \"Why is Angular so Spangular\", \"Harriet Hinson\"),\n//     new Message(\"3\", \"Comon Man!\", \"Too much work for a 3 unit course\", \"Dan the Man\"),\n//     new Message(\"4\", \"Whazzup?\", \"What happended to CSS HTML and JS?\", \"Who Yang\"),\n//     new Message(\"5\", \"Hellow from Harry Howser\", \"Help me finish this course!\", \"One Fun Guy\")\n//   ];\n\n//   ngOnInit() {\n//     console.log(\"Hello message-list\")\n//   }\n\n\n// // onMessageSelected(message: Message) {\n// // this.onMessageSelected.emit(message);\n// //  }\n\n//  onMessageAdded(message: Message) {\n//   console.log(\"Message about to be pushed\")\n//     this.messages.push(message);\n//   }\n// }\n","<div class=\"row\">\n  <div class=\"col-md-100\">\n    <div class=\"panel panel-default\">\n      <div class=\"panel-heading\">\n        <div class=\"row pad-left-right\">\n          <span class=\"title pull-left\">Messages</span>\n        </div>\n      </div>\n      <div class=\"panel-body\">\n        <div class=\"row\">\n          <div class=\"col-xs-12\">\n             <app-message-item></app-message-item>\n            <!-- <app-message-item\n              *ngFor=\"let messageEl of messages\"\n              [message]=\"messageEl\"\n             (messageSelected)=\"onMessageSelected(messageEl)\"\n            ></app-message-item> -->\n          </div>\n        </div>\n      </div>\n      <div class=\"panel-footer\">\n        <!-- <app-message-edit></app-message-edit> -->\n           <app-message-edit\n        (messageAdded)=\"onMessageAdded($event)\"></app-message-edit>\n          <hr>\n      </div>\n    </div>\n  </div>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}