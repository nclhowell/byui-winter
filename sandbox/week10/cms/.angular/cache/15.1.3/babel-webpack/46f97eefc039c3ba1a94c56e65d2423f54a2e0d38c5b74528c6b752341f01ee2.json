{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../document.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction DocumentEditComponent_div_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 16);\n    i0.ɵɵtext(1, \" The Document Title and Document URL are required fields \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction DocumentEditComponent_div_24_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"button\", 17);\n    i0.ɵɵlistener(\"click\", function DocumentEditComponent_div_24_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext();\n      const _r0 = i0.ɵɵreference(3);\n      return i0.ɵɵresetView(ctx_r3.onSubmit(_r0));\n    });\n    i0.ɵɵtext(2, \"Save\");\n    i0.ɵɵelementEnd()();\n  }\n}\nexport class DocumentEditComponent {\n  constructor(documentService, router, route) {\n    this.documentService = documentService;\n    this.router = router;\n    this.route = route;\n    this.editMode = false;\n    this.name = \"\";\n    this.tsdocTitle = {\n      \"title\": \"\"\n    };\n    this.tsdocDesc = {\n      \"description\": \"Whatever Description\"\n    };\n    this.tsdocUrl = {\n      \"url\": \"\"\n    };\n    this.tsWhat = true;\n  }\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n      console.log(params['id']);\n      if (!params['id']) {\n        this.editMode = false;\n        return;\n      }\n      this.id = params['id'];\n      this.originalDocument = this.documentService.getDocument(this.id);\n      if (!this.originalDocument) {\n        return;\n      }\n      this.document = this.originalDocument;\n      this.document = JSON.parse(JSON.stringify(this.document));\n      this.editMode = true;\n      // console.log(\"Cloned Doc = \", this.document)\n    });\n  }\n\n  onSubmit(f) {\n    this.value = f.value; // get values from form’s fields\n    console.log(\"Form Input\", this.value);\n    this.newDocument = this.document;\n    if (this.editMode = true) {\n      this.documentService.updateDocument(this.originalDocument, this.newDocument);\n    } else {\n      this.documentService.addDocument(this.newDocument);\n    }\n    this.router.navigate(['documents']);\n    // console.log(f)\n    // console.log(this.tsdocTitle)\n    //console.log(\"Title Value is:\", f.value.docTitle)\n    //console.log(\"Description Value is:\", f.value.docDesc)\n    // console.log(\"Url Value is:\", f.value.docUrl)\n    // console.log(\"Url Value is:\", f.value.docUrl)\n  }\n\n  onCancel() {\n    this.router.navigate(['documents']);\n  }\n}\nDocumentEditComponent.ɵfac = function DocumentEditComponent_Factory(t) {\n  return new (t || DocumentEditComponent)(i0.ɵɵdirectiveInject(i1.DocumentService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n};\nDocumentEditComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: DocumentEditComponent,\n  selectors: [[\"app-document-edit\"]],\n  decls: 25,\n  vars: 5,\n  consts: [[1, \"panel\", \"panel-default\"], [1, \"panel-body\"], [\"id\", \"document-edit\"], [\"f\", \"ngForm\"], [1, \"row\"], [1, \"col-sm-12\", \"form-group\"], [\"for\", \"name\"], [\"type\", \"text\", \"ngModel\", \"\", \"name\", \"title\", \"id\", \"name\", \"size\", \"120\", \"max\", \"120\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"description\"], [\"type\", \"text\", \"ngModel\", \"\", \"name\", \"docDesc\", \"id\", \"description\", \"size\", \"120\", \"max\", \"255\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"url\"], [\"type\", \"text\", \"ngModel\", \"\", \"name\", \"url\", \"id\", \"url\", \"size\", \"150\", \"max\", \"255\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"class\", \"alert alert-danger\", 4, \"ngIf\"], [1, \"col-xs-12\", \"btn-toolbar\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", 3, \"click\"], [4, \"ngIf\"], [1, \"alert\", \"alert-danger\"], [\"type\", \"submit\", 1, \"btn\", \"btn-success\", 3, \"click\"]],\n  template: function DocumentEditComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"form\", 2, 3)(4, \"div\", 4)(5, \"div\", 5)(6, \"label\", 6);\n      i0.ɵɵtext(7, \"Document Title:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"input\", 7);\n      i0.ɵɵlistener(\"ngModelChange\", function DocumentEditComponent_Template_input_ngModelChange_8_listener($event) {\n        return ctx.tsdocTitle.title = $event;\n      });\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(9, \"div\", 4)(10, \"div\", 5)(11, \"label\", 8);\n      i0.ɵɵtext(12, \"Document Description:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"input\", 9);\n      i0.ɵɵlistener(\"ngModelChange\", function DocumentEditComponent_Template_input_ngModelChange_13_listener($event) {\n        return ctx.tsdocDesc.description = $event;\n      });\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(14, \"div\", 4)(15, \"div\", 5)(16, \"label\", 10);\n      i0.ɵɵtext(17, \"Document URL:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"input\", 11);\n      i0.ɵɵlistener(\"ngModelChange\", function DocumentEditComponent_Template_input_ngModelChange_18_listener($event) {\n        return ctx.tsdocUrl.url = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(19, DocumentEditComponent_div_19_Template, 2, 0, \"div\", 12);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(20, \"div\", 4)(21, \"div\", 13)(22, \"button\", 14);\n      i0.ɵɵlistener(\"click\", function DocumentEditComponent_Template_button_click_22_listener() {\n        return ctx.onCancel();\n      });\n      i0.ɵɵtext(23, \"Cancel\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(24, DocumentEditComponent_div_24_Template, 3, 0, \"div\", 15);\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"ngModel\", ctx.tsdocTitle.title);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.tsdocDesc.description);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.tsdocUrl.url);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.tsdocUrl.docUrl || !ctx.tsdocTitle);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.tsdocUrl.docUrl && ctx.tsdocTitle);\n    }\n  },\n  dependencies: [i3.NgIf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.NgModel, i4.NgForm],\n  styles: [\"input.ng-invalid[_ngcontent-%COMP%] {\\r\\n  border: 1px solid red;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvZG9jdW1lbnRzL2RvY3VtZW50LWVkaXQvZG9jdW1lbnQtZWRpdC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UscUJBQXFCO0FBQ3ZCIiwic291cmNlc0NvbnRlbnQiOlsiaW5wdXQubmctaW52YWxpZCB7XHJcbiAgYm9yZGVyOiAxcHggc29saWQgcmVkO1xyXG59XHJcbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":"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","names":["i0","DocumentEditComponent","constructor","documentService","router","route","ngOnInit","params","subscribe","console","log","editMode","id","originalDocument","getDocument","document","JSON","parse","stringify","onSubmit","f","value","newDocument","updateDocument","addDocument","navigate","onCancel","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\data\\A-byu\\Full Stack Dev WDD 430\\code\\wdd430\\byui-winter\\week8\\cms\\src\\app\\documents\\document-edit\\document-edit.component.html","C:\\data\\A-byu\\Full Stack Dev WDD 430\\code\\wdd430\\byui-winter\\week8\\cms\\src\\app\\documents\\document-edit\\document-edit.component.ts"],"sourcesContent":["<div class=\"panel panel-default\">\n  <div class=\"panel-body\">\n    <form id=\"document-edit\" #f=\"ngForm\">\n      <div class=\"row\">\n        <div class=\"col-sm-12 form-group\">\n          <label for=\"name\">Document Title:</label>\n          <input\n            type=\"text\"\n            ngModel\n            name=\"title\"\n            [(ngModel)]=\"tsdocTitle.title\"\n            id=\"name\"\n            class=\"form-control\"\n            size=\"120\"\n            max=\"120\"\n            required\n          />\n        </div>\n      </div>\n      <!-- [(ngModel)]=\"tsdocTitle.docTitle\"  -->\n\n      <div class=\"row\">\n        <div class=\"col-sm-12 form-group\">\n          <label for=\"description\">Document Description:</label>\n          <input\n            type=\"text\"\n            ngModel\n            name=\"docDesc\"\n            [(ngModel)]=\"tsdocDesc.description\"\n            id=\"description\"\n            class=\"form-control\"\n            size=\"120\"\n            max=\"255\"\n          />\n        </div>\n      </div>\n      <!-- [(ngModel)]=\"tsdocDesc.docDesc\"  -->\n\n      <div class=\"row\">\n        <div class=\"col-sm-12 form-group\">\n          <label for=\"url\">Document URL:</label>\n          <input\n            type=\"text\"\n            ngModel\n            name=\"url\"\n            [(ngModel)]=\"tsdocUrl.url\"\n            id=\"url\"\n            class=\"form-control\"\n            size=\"150\"\n            max=\"255\"\n            required\n          />\n          <!-- [(ngModel)]=\"tsdocUrl.docUrl\" -->\n          <!-- <div class=\"alert alert-danger\" ngIf=\"tsdocUrl.docUrl\"> -->\n          <!-- <div class=\"alert alert-danger\"> -->\n          <!-- <div class=\"alert alert-danger\" *ngIf=\"!name; then yesName; else noName\"> -->\n          <div\n            class=\"alert alert-danger\"\n            *ngIf=\"!tsdocUrl.docUrl || !tsdocTitle\">\n            The Document Title and Document URL are required fields\n          </div>\n        </div>\n      </div>\n\n      <div class=\"row\">\n        <div class=\"col-xs-12 btn-toolbar\">\n          <button class=\"btn btn-primary\" type=\"button\" (click)=\"onCancel()\">Cancel</button>\n          <div *ngIf=\"tsdocUrl.docUrl && tsdocTitle\">\n           <button class=\"btn btn-success\" type=\"submit\" (click)=\"onSubmit(f)\">Save</button>\n        </div>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component,  OnInit } from '@angular/core';\nimport { FormGroup, FormControl, FormArray, Validators, NgForm } from '@angular/forms';\nimport { DocumentService } from '../document.service';\nimport { Document } from '../documents.model'\nimport { ActivatedRoute, Router, Params } from '@angular/router'\n@Component({\n  selector: 'app-document-edit',\n  templateUrl: './document-edit.component.html',\n  styleUrls: ['./document-edit.component.css']\n})\nexport class DocumentEditComponent implements OnInit {\noriginalDocument: Document;\ndocument: Document;\nnewDocument: Document;\nvalue: Document;\neditMode: boolean = false;\nname: string = \"\";\ntsdocTitle = {\"title\": \"\"}\ntsdocDesc = {\"description\": \"Whatever Description\"}\ntsdocUrl = {\"url\": \"\"}\ntsWhat = true;\nid: string;\nstrid: string;\n\nconstructor(\n  private documentService: DocumentService,\n  private router: Router,\n  private route: ActivatedRoute) {\n}\n\nngOnInit() {\n  this.route.params.subscribe(\n    (params: Params) => {\n      console.log(params['id'])\n      if (!params['id'])\n      {\n      this.editMode = false;\n      return;\n      }\nthis.id = params['id'];\nthis.originalDocument = this.documentService.getDocument(this.id)\nif (!this.originalDocument)\n{return}\nthis.document = this.originalDocument;\nthis.document = JSON.parse(JSON.stringify(this.document));\nthis.editMode = true;\n// console.log(\"Cloned Doc = \", this.document)\n})\n}\n\nonSubmit(f: NgForm) {\n  this.value = f.value;  // get values from form’s fields\n console.log(\"Form Input\", this.value)\n  this.newDocument = this.document\n   if (this.editMode = true) {\n    this.documentService.updateDocument(this.originalDocument, this.newDocument)\n   }\n   else\n   {\n    this.documentService.addDocument(this.newDocument)\n   }\n\n  this.router.navigate(['documents'])\n// console.log(f)\n// console.log(this.tsdocTitle)\n//console.log(\"Title Value is:\", f.value.docTitle)\n//console.log(\"Description Value is:\", f.value.docDesc)\n// console.log(\"Url Value is:\", f.value.docUrl)\n// console.log(\"Url Value is:\", f.value.docUrl)\n  }\n\nonCancel() {\n  this.router.navigate(['documents'])\n   }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}