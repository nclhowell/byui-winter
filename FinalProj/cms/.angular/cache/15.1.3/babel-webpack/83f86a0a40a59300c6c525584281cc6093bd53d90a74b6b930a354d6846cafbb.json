{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../bike.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction BikeEditComponent_div_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 23);\n    i0.ɵɵelement(1, \"br\");\n    i0.ɵɵtext(2, \"Invalid Model Entry!!\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction BikeEditComponent_div_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 23);\n    i0.ɵɵelement(1, \"br\");\n    i0.ɵɵtext(2, \"Invalid Terraintype Number Entry!!!\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction BikeEditComponent_div_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 24);\n    i0.ɵɵtext(1, \" The Document Manufacturer and Document Model are required fields \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction BikeEditComponent_div_34_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 24);\n    i0.ɵɵtext(1, \" The Manufacturer and Model are required fields \");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class BikeEditComponent {\n  constructor(bikeService, router, route) {\n    this.bikeService = bikeService;\n    this.router = router;\n    this.route = route;\n    this.groupBikes = [];\n    this.editMode = false;\n    this.groupMode = false;\n    // name: string = '';\n    // tsdocId = { id: 'enter id here' };\n    // tsdocName = { name: 'enter name here' };\n    // tsdocDesc = { description: 'enter description here' };\n    // tsdocUrl = { url: 'enter url here' };\n    // tdocId = { id: 'enter id here' };\n    this.tdocManufacturer = 'Enter Manufacturer here';\n    this.tdocModel = 'Enter Model here (Must begin with \"Dude\")';\n    this.tdocTerrainType = 'Enter Terrain here (Must begin with \"Gnarly\")';\n    this.tdocUrl = 'Enter URL here';\n    this.manufacturer = 'Enter manufacturer here';\n    this.model = 'Enter model here';\n    this.terrainType = 'Enter terrain here';\n    this.url = 'Enter URL here';\n    this.tsWhat = true;\n    this.fid = '80';\n  }\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n      this.id = params['id'];\n      this.bikeService.getBike(this.id).subscribe(bikeData => {\n        this.bike = bikeData.bike;\n      });\n      console.log(this.bike);\n      this.manufacturer = this.bike.manufacturer;\n      this.model = this.bike.model;\n      this.terrainType = this.bike.terrainType;\n      this.url = this.bike.url;\n      if (!this.originalBike) {\n        return;\n      }\n      this.bike = this.originalBike;\n      // Parse this.bike\n      this.bike = JSON.parse(JSON.stringify(this.originalBike));\n      // if (this.bike.group) {\n      //   this.groupMode = true;\n      //   this.groupBikes = this.originalBike.group.slice();\n      //   // console.log(this.groupBikes[1]);\n      // }\n      this.editMode = true;\n    });\n  }\n  onSubmit(f) {\n    // f.value.id = \"80\"; // Set blank formId\n    // console.log('All Form Fields :', f);\n    // console.log('Form Input = ', f.value);\n    // this.bike = (this.id, f.value.name, f.value.url)\n    this.newBike = f.value;\n    // console.log('New Bike from form', this.newBike);\n    if (this.editMode == true) {\n      this.bikeService.updateBike(this.originalBike, this.newBike);\n    } else {\n      this.bikeService.addBike(this.newBike);\n    }\n    this.router.navigate(['/bikes']);\n    // console.log(f)\n    // console.log(this.tsdocTitle)\n    //console.log(\"Title Value is:\", f.value.docTitle)\n    //console.log(\"Description Value is:\", f.value.docDesc)\n    // console.log(\"Url Value is:\", f.value.docUrl)\n    // console.log(\"Url Value is:\", f.value.docUrl)\n  }\n\n  onCancel() {\n    this.router.navigate(['/bikes']);\n  }\n}\nBikeEditComponent.ɵfac = function BikeEditComponent_Factory(t) {\n  return new (t || BikeEditComponent)(i0.ɵɵdirectiveInject(i1.BikeService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n};\nBikeEditComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: BikeEditComponent,\n  selectors: [[\"app-bike-edit\"]],\n  decls: 41,\n  vars: 13,\n  consts: [[1, \"panel\", \"panel-default\"], [1, \"panel-body\"], [\"id\", \"bike-edit\"], [\"f\", \"ngForm\"], [1, \"row\"], [1, \"col-sm-12\", \"form-group\"], [\"type\", \"hidden\", \"name\", \"id\", \"ngModel\", \"\", \"id\", \"id\", \"size\", \"120\", \"max\", \"120\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"manufacturer\"], [\"type\", \"text\", \"name\", \"manufacturer\", \"ngModel\", \"\", \"id\", \"manufacturer\", \"required\", \"\", \"size\", \"120\", \"max\", \"120\", 1, \"form-control\", 3, \"ngModel\", \"placeholder\"], [\"for\", \"model\"], [\"type\", \"text\", \"name\", \"model\", \"ngModel\", \"\", \"id\", \"model\", \"size\", \"120\", \"max\", \"255\", \"pattern\", \"^(?:Dude).*\", 1, \"form-control\", \"required\", 3, \"ngModel\", \"placeholder\"], [\"model\", \"ngModel\"], [\"class\", \"text-danger\", 4, \"ngIf\"], [\"for\", \"terrainType\"], [\"type\", \"text\", \"name\", \"terrainType\", \"ngModel\", \"\", \"id\", \"terrainType\", \"size\", \"150\", \"max\", \"255\", \"pattern\", \"^(?:Gnarly).*\", 1, \"form-control\", \"invalid\", 3, \"ngModel\", \"placeholder\"], [\"terrainType\", \"ngModel\"], [\"class\", \"alert alert-danger\", 4, \"ngIf\"], [\"for\", \"url\"], [\"type\", \"text\", \"name\", \"url\", \"ngModel\", \"\", \"id\", \"url\", \"size\", \"150\", \"max\", \"255\", 1, \"form-control\", 3, \"ngModel\", \"placeholder\"], [1, \"form-group\"], [1, \"col-xs-12\", \"btn-toolbar\"], [\"type\", \"submit\", 1, \"btn\", \"btn-success\", 3, \"click\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", 3, \"click\"], [1, \"text-danger\"], [1, \"alert\", \"alert-danger\"]],\n  template: function BikeEditComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r7 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"form\", 2, 3)(4, \"div\", 4)(5, \"div\", 5)(6, \"input\", 6);\n      i0.ɵɵlistener(\"ngModelChange\", function BikeEditComponent_Template_input_ngModelChange_6_listener($event) {\n        return ctx.bike.id = $event;\n      });\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(7, \"div\", 4)(8, \"div\", 5)(9, \"label\", 7);\n      i0.ɵɵtext(10, \"Manufacturer:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(11, \"input\", 8);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(12, \"div\", 4)(13, \"div\", 5)(14, \"label\", 9);\n      i0.ɵɵtext(15, \"Model:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(16, \"input\", 10, 11);\n      i0.ɵɵtemplate(18, BikeEditComponent_div_18_Template, 3, 0, \"div\", 12);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(19, \"div\", 4)(20, \"div\", 5)(21, \"label\", 13);\n      i0.ɵɵtext(22, \"Terraintype:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(23, \"input\", 14, 15);\n      i0.ɵɵtemplate(25, BikeEditComponent_div_25_Template, 3, 0, \"div\", 12);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(26, BikeEditComponent_div_26_Template, 2, 0, \"div\", 16);\n      i0.ɵɵelementStart(27, \"div\", 4)(28, \"div\", 5)(29, \"label\", 17);\n      i0.ɵɵtext(30, \"Image URL:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(31, \"input\", 18);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(32, \"div\", 4);\n      i0.ɵɵelement(33, \"div\", 19);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(34, BikeEditComponent_div_34_Template, 2, 0, \"div\", 16);\n      i0.ɵɵelementStart(35, \"div\", 4)(36, \"div\", 20)(37, \"button\", 21);\n      i0.ɵɵlistener(\"click\", function BikeEditComponent_Template_button_click_37_listener() {\n        i0.ɵɵrestoreView(_r7);\n        const _r0 = i0.ɵɵreference(3);\n        return i0.ɵɵresetView(ctx.onSubmit(_r0));\n      });\n      i0.ɵɵtext(38, \"Save\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(39, \"button\", 22);\n      i0.ɵɵlistener(\"click\", function BikeEditComponent_Template_button_click_39_listener() {\n        return ctx.onCancel();\n      });\n      i0.ɵɵtext(40, \" Cancel \");\n      i0.ɵɵelementEnd()()()()()();\n    }\n    if (rf & 2) {\n      const _r0 = i0.ɵɵreference(3);\n      const _r1 = i0.ɵɵreference(17);\n      const _r3 = i0.ɵɵreference(24);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngModel\", ctx.bike.id);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.bike.manufacturer)(\"placeholder\", ctx.tdocManufacturer);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.bike.model)(\"placeholder\", ctx.tdocModel);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", _r1.invalid && _r1.touched);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.bike.terrainType)(\"placeholder\", ctx.tdocTerrainType);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", _r3.invalid && _r3.touched);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", _r0.form.controls.status);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.bike.url)(\"placeholder\", ctx.tdocUrl);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", !_r1 || !ctx.manufacturer);\n    }\n  },\n  dependencies: [i3.NgIf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.PatternValidator, i4.NgModel, i4.NgForm],\n  styles: [\".boldRed[_ngcontent-%COMP%]\\n{\\n  color: rgb(87, 210, 80)!important;\\n  font-size:larger!important;\\n}\\n.required.ng-invalid[_ngcontent-%COMP%] {\\n  border: 1px solid red;\\n}\\n\\n.invalid.ng-invalid.ng-dirty[_ngcontent-%COMP%] {\\n  border: 1px solid red;\\n}\\n\\n.pad-left-right[_ngcontent-%COMP%]{\\n  padding-left:.1rem;\\n}\\n\\n.deleteButton[_ngcontent-%COMP%] {\\n  margin-top: 1.5rem;\\n  margin-left: -1.2rem;\\n  width: 3.4rem;\\n}\\n\\n.buttonDiv[_ngcontent-%COMP%] {\\n  margin-top: 1.5rem;\\n}\\n\\n.groupDiv[_ngcontent-%COMP%] {\\n  min-height: 6rem;\\n  border: solid thin lightgrey;\\n}\\n\\n.dragMsg[_ngcontent-%COMP%] {\\n  font-size: 2rem;\\n  color: darkgrey;\\n  margin-left: 3rem;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYmlrZXMvYmlrZS1lZGl0L2Jpa2UtZWRpdC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztFQUVFLGlDQUFpQztFQUNqQywwQkFBMEI7QUFDNUI7QUFDQTtFQUNFLHFCQUFxQjtBQUN2Qjs7QUFFQTtFQUNFLHFCQUFxQjtBQUN2Qjs7QUFFQTtFQUNFLGtCQUFrQjtBQUNwQjs7QUFFQTtFQUNFLGtCQUFrQjtFQUNsQixvQkFBb0I7RUFDcEIsYUFBYTtBQUNmOztBQUVBO0VBQ0Usa0JBQWtCO0FBQ3BCOztBQUVBO0VBQ0UsZ0JBQWdCO0VBQ2hCLDRCQUE0QjtBQUM5Qjs7QUFFQTtFQUNFLGVBQWU7RUFDZixlQUFlO0VBQ2YsaUJBQWlCO0FBQ25CIiwic291cmNlc0NvbnRlbnQiOlsiLmJvbGRSZWRcbntcbiAgY29sb3I6IHJnYig4NywgMjEwLCA4MCkhaW1wb3J0YW50O1xuICBmb250LXNpemU6bGFyZ2VyIWltcG9ydGFudDtcbn1cbi5yZXF1aXJlZC5uZy1pbnZhbGlkIHtcbiAgYm9yZGVyOiAxcHggc29saWQgcmVkO1xufVxuXG4uaW52YWxpZC5uZy1pbnZhbGlkLm5nLWRpcnR5IHtcbiAgYm9yZGVyOiAxcHggc29saWQgcmVkO1xufVxuXG4ucGFkLWxlZnQtcmlnaHR7XG4gIHBhZGRpbmctbGVmdDouMXJlbTtcbn1cblxuLmRlbGV0ZUJ1dHRvbiB7XG4gIG1hcmdpbi10b3A6IDEuNXJlbTtcbiAgbWFyZ2luLWxlZnQ6IC0xLjJyZW07XG4gIHdpZHRoOiAzLjRyZW07XG59XG5cbi5idXR0b25EaXYge1xuICBtYXJnaW4tdG9wOiAxLjVyZW07XG59XG5cbi5ncm91cERpdiB7XG4gIG1pbi1oZWlnaHQ6IDZyZW07XG4gIGJvcmRlcjogc29saWQgdGhpbiBsaWdodGdyZXk7XG59XG5cbi5kcmFnTXNnIHtcbiAgZm9udC1zaXplOiAycmVtO1xuICBjb2xvcjogZGFya2dyZXk7XG4gIG1hcmdpbi1sZWZ0OiAzcmVtO1xufVxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["i0","BikeEditComponent","constructor","bikeService","router","route","ngOnInit","params","subscribe","id","getBike","bikeData","bike","console","log","manufacturer","model","terrainType","url","originalBike","JSON","parse","stringify","editMode","onSubmit","f","newBike","value","updateBike","addBike","navigate","onCancel","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\data\\A-byu\\Full Stack Dev WDD 430\\code\\wdd430\\byui-winter\\FinalProj\\cms\\src\\app\\bikes\\bike-edit\\bike-edit.component.html","C:\\data\\A-byu\\Full Stack Dev WDD 430\\code\\wdd430\\byui-winter\\FinalProj\\cms\\src\\app\\bikes\\bike-edit\\bike-edit.component.ts"],"sourcesContent":["<div class=\"panel panel-default\">\n  <div class=\"panel-body\">\n    <form id=\"bike-edit\"  #f=\"ngForm\">\n        <div class=\"row\">\n        <div class=\"col-sm-12 form-group\">\n          <input\n            type=\"hidden\"\n            name=\"id\"\n            ngModel\n            [(ngModel)]=\"bike.id\"\n            id=\"id\"\n            class=\"form-control\"\n            size=\"120\"\n            max=\"120\"\n            required\n          />\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-sm-12 form-group\">\n          <label for=\"manufacturer\">Manufacturer:</label>\n          <input\n            type=\"text\"\n            name=\"manufacturer\"\n            ngModel\n            [ngModel]=\"bike.manufacturer\"\n            id=\"manufacturer\"\n            class=\"form-control\"\n            required\n            size=\"120\"\n            max=\"120\"\n            [placeholder]=\"tdocManufacturer\"\n          />\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-sm-12 form-group\">\n          <label for=\"model\">Model:</label>\n          <input\n            type=\"text\"\n            name=\"model\"\n            #model=\"ngModel\"\n            ngModel\n            [ngModel]=\"bike.model\"\n            id=\"model\"\n            class=\"form-control required\"\n            size=\"120\"\n            max=\"255\"\n            [placeholder]=\"tdocModel\"\n           pattern=\"^(?:Dude).*\"\n          />\n\n           <!-- pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,3}$\" -->\n          <div *ngIf=\"model.invalid && model.touched\" class=\"text-danger\"><br>Invalid Model Entry!!</div>\n\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-sm-12 form-group\">\n          <label for=\"terrainType\">Terraintype:</label>\n          <input\n            type=\"text\"\n            name=\"terrainType\"\n            #terrainType=\"ngModel\"\n            ngModel\n            [ngModel]=\"bike.terrainType\"\n            id=\"terrainType\"\n            class=\"form-control invalid\"\n            size=\"150\"\n            max=\"255\"\n            [placeholder]=\"tdocTerrainType\"\n            pattern=\"^(?:Gnarly).*\"\n          />\n          <div *ngIf=\"terrainType.invalid && terrainType.touched\" class=\"text-danger\"><br>Invalid Terraintype Number Entry!!!</div>\n        </div>\n      </div>\n       <div\n      class=\"alert alert-danger\"\n      *ngIf=\"f.form.controls.status\" >\n      The Document Manufacturer and Document Model are required fields\n    </div>\n\n      <div class=\"row\">\n        <div class=\"col-sm-12 form-group\">\n          <label for=\"url\">Image URL:</label>\n          <input\n            type=\"text\"\n            name=\"url\"\n            ngModel\n            [ngModel]=\"bike.url\"\n            id=\"url\"\n            class=\"form-control\"\n            size=\"150\"\n            max=\"255\"\n            [placeholder]=\"tdocUrl\"\n          />\n        </div>\n      </div>\n\n      <div class=\"row\">\n        <div class=\"form-group\">\n          <!-- <label for=\"groupList\">Group Bikes:</label>\n          <div class=\"row\" id=\"grouplist\" style=\"min-height: 3rem\">\n            <div *ngfor=\"let bike of groupbikes; let i = index\">\n              <div>\n                <cms-bike-item\n                  class=\"col-sm-11\"\n                  [bike]=\"bike\"\n                ></cms-bike-item>\n                <button\n                  class=\"btn btn-danger col-sm-2 deleteButton\"\n                  (click)=\"onRemoveItem(i)\"\n                >\n                  X\n                </button>\n              </div>\n            </div>\n            <span class=\"dragMsg\" *ngIf=\"groupBikes?.length < 1\"\n              >Drag bikes in group here</span\n            >\n          </div> -->\n        </div>\n      </div>\n      <div\n      class=\"alert alert-danger\"\n      *ngIf=\"!model || !manufacturer\" >\n      The Manufacturer and Model are required fields\n    </div>\n      <div class=\"row\">\n        <div class=\"col-xs-12 btn-toolbar\">\n          <button class=\"btn btn-success\" type=\"submit\" (click)=\"onSubmit(f)\">Save</button>\n          <button class=\"btn btn-primary\" type=\"button\" (click)=\"onCancel()\">\n            Cancel\n          </button>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {\n  FormGroup,\n  FormControl,\n  FormArray,\n  Validators,\n  NgForm,\n} from '@angular/forms';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { BikeService } from '../bike.service';\nimport { Bike } from '../bike.model';\nimport { ActivatedRoute, Router, Params } from '@angular/router';\n@Component({\n  selector: 'app-bike-edit',\n  templateUrl: './bike-edit.component.html',\n  styleUrls: ['./bike-edit.component.css'],\n})\nexport class BikeEditComponent implements OnInit {\n  originalBike: Bike;\n  groupBikes: Bike[] = [];\n  bike: Bike;\n  newBike: Bike;\n  value: Bike;\n  editMode: boolean = false;\n  groupMode: boolean = false;\n  // name: string = '';\n  // tsdocId = { id: 'enter id here' };\n  // tsdocName = { name: 'enter name here' };\n  // tsdocDesc = { description: 'enter description here' };\n  // tsdocUrl = { url: 'enter url here' };\n  // tdocId = { id: 'enter id here' };\n  tdocManufacturer = 'Enter Manufacturer here';\n  tdocModel = 'Enter Model here (Must begin with \"Dude\")';\n  tdocTerrainType = 'Enter Terrain here (Must begin with \"Gnarly\")';\n  tdocUrl = 'Enter URL here';\n\n  manufacturer = 'Enter manufacturer here';\n  model = 'Enter model here';\n  terrainType = 'Enter terrain here';\n  url = 'Enter URL here';\n\n  tsWhat = true;\n  fid: string = '80';\n  id: string;\n  noid: string;\n  strid: string;\n\n  constructor(\n    private bikeService: BikeService,\n    private router: Router,\n    private route: ActivatedRoute\n  ) {}\n\n  ngOnInit() {\n   this.route.params\n    .subscribe(\n      (params: Params) => {\n        this.id = params['id'];\n        this.bikeService.getBike(this.id).subscribe(bikeData => {\n         this.bike = bikeData.bike\n      });\n      console.log (this.bike)\n      this.manufacturer = this.bike.manufacturer;\n      this.model = this.bike.model;\n      this.terrainType = this.bike.terrainType;\n      this.url = this.bike.url;\n\n      if (!this.originalBike) {\n       return;\n     }\n      this.bike = this.originalBike;\n     // Parse this.bike\n     this.bike = JSON.parse(JSON.stringify(this.originalBike));\n      // if (this.bike.group) {\n      //   this.groupMode = true;\n      //   this.groupBikes = this.originalBike.group.slice();\n      //   // console.log(this.groupBikes[1]);\n      // }\n      this.editMode = true;\n    });\n  }\n\n  onSubmit(f: NgForm) {\n    // f.value.id = \"80\"; // Set blank formId\n    // console.log('All Form Fields :', f);\n    // console.log('Form Input = ', f.value);\n    // this.bike = (this.id, f.value.name, f.value.url)\n    this.newBike = f.value;\n    // console.log('New Bike from form', this.newBike);\n    if (this.editMode == true) {\n      this.bikeService.updateBike(this.originalBike, this.newBike);\n    } else {\n      this.bikeService.addBike(this.newBike);\n    }\n\n    this.router.navigate(['/bikes']);\n    // console.log(f)\n    // console.log(this.tsdocTitle)\n    //console.log(\"Title Value is:\", f.value.docTitle)\n    //console.log(\"Description Value is:\", f.value.docDesc)\n    // console.log(\"Url Value is:\", f.value.docUrl)\n    // console.log(\"Url Value is:\", f.value.docUrl)\n  }\n\n  onCancel() {\n    this.router.navigate(['/bikes']);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}