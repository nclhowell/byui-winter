{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { MOCKCONTACTS } from './MOCKCONTACTS';\nimport * as i0 from \"@angular/core\";\nexport class ContactService {\n  constructor() {\n    this.contacts = [];\n    this.contactSelectedEvent = new EventEmitter();\n    this.contacts = MOCKCONTACTS;\n  }\n  getContacts() {\n    return this.contacts.slice();\n  }\n  //  getContact(id:string){\n  //   // return this.contacts.slice();\n  //   console.log (\"getContact ID = \", id)\n  // }\n  getContact(id) {\n    for (let contact of this.contacts) {\n      if (contact.id == id) {\n        // console.log(contact);\n        return contact;\n      }\n    }\n  }\n}\nContactService.ɵfac = function ContactService_Factory(t) {\n  return new (t || ContactService)();\n};\nContactService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ContactService,\n  factory: ContactService.ɵfac\n});","map":{"version":3,"mappings":"AACA,SAASA,YAAY,QAAQ,eAAe;AAE5C,SAASC,YAAY,QAAQ,gBAAgB;;AAG7C,OAAM,MAAOC,cAAc;EAIzBC;IAHA,aAAQ,GAAc,EAAE;IACxB,yBAAoB,GAAG,IAAIH,YAAY,EAAW;IAGhD,IAAI,CAACI,QAAQ,GAAGH,YAAY;EAC9B;EACAI,WAAW;IACT,OAAO,IAAI,CAACD,QAAQ,CAACE,KAAK,EAAE;EAC9B;EAEA;EACA;EACA;EACA;EACCC,UAAU,CAACC,EAAU;IACpB,KAAK,IAAIC,OAAO,IAAI,IAAI,CAACL,QAAQ,EAAE;MACjC,IAAIK,OAAO,CAACD,EAAE,IAAIA,EAAE,EAAE;QACvB;QACI,OAAOC,OAAO;;;EAGpB;;AAtBUP,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;SAAdA,cAAc;EAAAQ,SAAdR,cAAc;AAAA","names":["EventEmitter","MOCKCONTACTS","ContactService","constructor","contacts","getContacts","slice","getContact","id","contact","factory"],"sourceRoot":"","sources":["C:\\data\\A-byu\\Full Stack Dev WDD 430\\code\\wdd430\\byui-winter\\week5\\cms\\src\\app\\contacts\\contact.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { EventEmitter } from '@angular/core';\nimport { Contact } from './contact.model';\nimport { MOCKCONTACTS } from './MOCKCONTACTS';\n\n@Injectable()\nexport class ContactService {\n  contacts: Contact[] = [];\n  contactSelectedEvent = new EventEmitter<Contact>();\n\n  constructor() {\n    this.contacts = MOCKCONTACTS;\n  }\n  getContacts() {\n    return this.contacts.slice();\n  }\n\n  //  getContact(id:string){\n  //   // return this.contacts.slice();\n  //   console.log (\"getContact ID = \", id)\n  // }\n   getContact(id: string): Contact {\n    for (let contact of this.contacts) {\n      if (contact.id == id) {\n     // console.log(contact);\n         return contact;\n       }\n     }\n   }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}